{"version":3,"sources":["components/Content/Students/Students.tsx","components/Content/Students/Students.module.css","components/Content/Classes/Classes.module.css","components/Common/Options.tsx","serviceWorker.ts","index.tsx","components/Content/StudentPage/StudentInfo/StudentInfo.module.css","components/Content/Classes/ClassPreview/ClassPreview.module.css","components/Sidebar/Sidebar.module.css","components/Common/Suspender.tsx","components/Content/ClassPage/Sections/ScheduleSection/ScheduleSection.module.css","utils/functions.tsx","components/Content/StudentPage/StudentPage.module.css","components/Common/ChangeContent/ChangeContent.module.css","components/Content/Students/StudentPreview/StudentPreview.module.css","components/Common/OpenableImage/OpenableImage.module.css","components/Content/Classes/ClassPreview/ClassPreview.tsx","components/Content/Classes/ClassPreview/ClassCreator.tsx","components/Content/Classes/Classes.tsx","components/Common/Confirm/Confirm.module.css","utils/date.ts","components/Content/ClassPage/Sections/StudentSection/StudentSection.module.css","components/Content/Students/StudentPreview/StudentPreview.tsx","hooks/useList.ts","components/Common/Confirm/Confirm.tsx","components/Content/ClassPage/InfoSection/InfoSection.module.css","components/Filters/Filters.module.css","types.ts","components/Content/ClassPage/ClassPage.module.css","utils/createContentChanger/ContentChanger.module.css","components/Content/ClassPage/Sections/Common/ContentSection.module.css","components/Filters/Filters.tsx","components/Sidebar/Sidebar.tsx","components/Content/StudentPage/StudentInfo/Changer.tsx","components/Content/StudentPage/StudentInfo/StudentInfo.tsx","components/Content/StudentPage/StudentPage.tsx","components/Common/Searcher.tsx","components/Common/Accordion.tsx","components/Content/ClassPage/InfoSection/InfoSection.tsx","components/Content/ClassPage/Sections/StudentSection/StudentsSection.tsx","components/Content/ClassPage/Sections/ScheduleSection/ScheduleSection.tsx","components/Common/OpenableImage/OpenableImage.tsx","components/Common/OpenableImage/ImgAlbum.tsx","utils/createContentChanger/createContentChanger.tsx","components/Common/FileUploader.tsx","components/Common/OpenableImage/DeletableAttachment.tsx","components/Common/ChangeContent/ChangeContent.tsx","components/Common/ChangeContent/ChangeHomework.tsx","components/Content/ClassPage/Sections/HomeworkSection/HomeworkSection.tsx","components/Content/ClassPage/Sections/ChangesSection/ChangesSection.tsx","components/Content/ClassPage/ClassPage.tsx","HOCs/withAuth.tsx","App.tsx"],"names":["GET_STUDENTS","gql","Students","useQuery","data","loading","error","useList","items","setSort","setFilter","setItems","useState","text","setText","sorts","name","sort","a","b","className","role","vkId","fullName","banned","useEffect","students","styles","filter","setSearchText","str","toLowerCase","item","search","_class","sortsList","find","e","query","map","c","key","searchText","module","exports","OptionsElements","redactorOptions","delete","IoIosTrash","change","FaPen","confirm","MdCheck","reject","MdClose","add","MdAdd","isSoloIconProps","props","options","Object","values","keys","flag","opt","includes","React","memo","include","withRoleControl","allowOnlyAdmin","iconProps","useContext","UserContext","roles","student","admin","contributor","i","Error","allowOnlyRedactor","renderIf","restProps","createElement","Boolean","window","location","hostname","match","resolvers","Mutation","deleteClass","_","cache","classes","readQuery","GET_CLASSES","newClasses","writeQuery","createClass","studentsCount","__typename","_id","Date","now","toString","typeDefs","client","ApolloClient","uri","InMemoryCache","dataIdFromObject","obj","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","Suspender","children","queries","some","q","JSON","stringify","every","highlightSearch","searchString","highlightClass","trim","string","ind","slice","length","parseContentByDate","content","parsedFutureCont","parsedPastCont","parse","to","cont","contDate","parseDate","objectForEach","object","fn","mappedEntries","entries","value","fromEntries","getDateStrFromDayMonthStr","dayMonthStr","RegExp","months","join","test","split","day","month","indexOf","isNaN","Number","monthIndex","getFullYear","toISOString","DELETE_CLASS","useMutation","variables","waitForConfirm","setWaitForConfirm","highlighter","preview","style","backgroundColor","firstRow","secondRow","link","count","String","Options","onClick","size","Confirm","onConfirm","returnRes","CREATE_CLASS","matchClassName","res","digit","letter","ClassCreator","creating","setCreating","setName","setError","toUpperCase","replace","optimisticResponse","classCreateOne","update","proxy","concat","preventDefault","wrapper","creator","creator_stab","onSubmit","form","stopPropagation","button","onChange","target","autoFocus","type","placeholder","with_error","input","Classes","setSorting","Filters","filters","formStrs","dateStr","format","date","ms","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","BAN","getPrettyName","isBan","banStudent","info","defaultFilter","defaultSort","initialValues","setInitialValues","vals","modalRoot","querySelector","confirmElement","onReject","rejectElement","chooseHandler","createPortal","container","btn","filterContainer","color","id","UserInfo","userInfo","first_name","last_name","photo_rec","resetUser","src","alt","userName","logOut","localStorage","removeItem","Sidebar","setUser","uid","onMouseDown","sidebar","check","htmlFor","opened","closed","activeClassName","active","Selector","changeHandler","defaultValue","option","GET_INFO","Changer","changing","changer","infos","changeString","changeNumber","changeBool","defaultChecked","checked","nested","entrie","isChanging","pole","settings","notificationsEnabled","notificationTime","lastHomeworkCheck","StudentInfo","convertValue","showing","GET_STUDENT","UPDATE_STUDENT","CHANGE_CLASS","DELETE_STUDENT","StudentPage","useParams","setChanging","diff","setDiff","removed","setRemoved","updater","changeClass","deleter","path","poles","t","updateStudent","isInteger","f","s","getOwnPropertyNames","log","record","updatedStudent","studentOne","header","icons","icon","pen","iconSize","body","response","divStyle","position","closeStyle","right","top","inputStyle","borderRadius","height","paddingLeft","boxSizing","Body","Head","initiallyOpened","isOpened","attributes","setOpened","undefined","updateSearchString","Header","defaultSearchString","section","triangle_opened","modalEl","REMOVE_STUDENT_FROM_CLASS","GET_STUDENTS_FOR_CLASS","ADD_STUDENT_TO_CLASS","GET_STUDENTS_FOR_CHOOSING","StudentModal","closeModal","addStudent","chooseStudent","title","studentsChooser","chooser","chooser_name","chooser_vkId","chooser_className","remove","modalOpened","setModalOpened","setSearchString","st","toLocaleLowerCase","studentsSection","StudentPreview","result","days","GET_SCHEDULE","GET_LESSONS","CHANGE_SCHEDULE","ScheduleDay","index","lessons","lessonsList","changeDay","changes","setChanges","getAttribute","onDoubleClick","dayName","lesson","lessonChange","data-index","selectLesson","pickLesson","les","removeLesson","addLesson","changers","ScheduleSection","scheduleQuery","lessonsQuery","changeSchedule","dayIndex","newDay","changed","schedule","scheduleData","ImgStab","Stab","photoModal","close","ModalImg","nextImg","prevImg","setSrc","prev","setPrev","next","setNext","toImg","data-testid","width","maxWidth","OpenableImg","ImgAlbum","images","parsedImages","attachments","parsedAttachments","attachment","newImgProps","url","rest","assign","push","connectImages","at","attach","createContentFiller","contentFillers","initState","sectionClassName","titleClassName","stateFromDefaults","reduce","acc","state","setState","contentChanger","cursor","stateKey","ContentComponent","FileUploader","View","multiple","outline","opacity","pointerEvents","userSelect","display","DeletableAttachment","deletableAttachment","removeAttachment","parseAttachment","photo","owner_id","findMaxPhotoResolution","sizes","ChangeContentProps","selected","minDate","dateFormat","datePickerInput","showPopperArrow","calendarClassName","datePickerCalendar","onPhotoUpload","files","fd","FormData","append","fetch","origin","endsWith","method","headers","json","photos","newAttachments","uploaderIcon","attachmentsContainer","att","cols","rows","ChangeContent","ChangeHomework","possibleLessons","changeContentModalRoot","GET_HOMEWORK","REMOVE_TASK","CHANGE_HOMEWORK","ADD_HOMEWORK","REMOVE_OLD_HOMEWORK","Task","homework","removeHomework","updateHomework","pair","element","stab","newHomework","controls","CreateHomeworkModal","returnHomework","initContent","Add","addContent","parseHomeworkByLesson","parsedHomework","hw","hasOwnProperty","HomeworkSection","homeworkCreating","setHomeworkCreating","setInitContent","homeworkQuery","addHomework","removeOldHomework","mutation","homeworkId","updates","updatesWithoutTypename","sectionHeader","contentHeader","oldHw","newHw","parsedHw","parsedOldHw","oldContentHeader","accordion","removeOldContent","hwDate","offseted","elements","homeworkData","refetchQueries","GET_CHANGES","REMOVE_CHANGE","UPDATE_CHANGE","ADD_CHANGE","Change","removeChange","updateChange","updating","setUpdating","newContent","CreateChangeModal","returnChange","ChangesSection","changeCreating","setChangeCreating","changesQuery","addChange","changeId","chng","changeWithoutTypename","parsedChanges","changeDate","changeData","REMOVE_CLASS","ClassPage","removeClass","class","classRemoveOne","withRedirect","Component","allowStudent","Consumer","isAuth","lazy","Auth","createContext","NaN","useApolloClient","user","onUser","userWithRole","setItem","userItem","getItem","parsedUser","Provider","fallback","exact","component","params"],"mappings":"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","file":"static/js/main.ca7613f1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./Students.module.css\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { roles } from \"../../../types\";\r\nimport StudentPreview from \"./StudentPreview/StudentPreview\";\r\nimport useList from \"../../../hooks/useList\";\r\nimport Filters from \"../../Filters/Filters\";\r\nimport Suspender from \"../../Common/Suspender\";\r\n\r\nexport const GET_STUDENTS = gql`\r\n    {\r\n        students: studentMany {\r\n            vkId,\r\n            className\r\n            role\r\n            banned\r\n            fullName\r\n            _id\r\n        }\r\n    }\r\n`;\r\n\r\nexport type studentPreview = {\r\n    vkId: number\r\n    className: string\r\n    role: roles\r\n    banned: boolean\r\n    fullName: string\r\n    _id: string\r\n}\r\n\r\nexport type sort<T = any> = {\r\n    name: string,\r\n    sort: (a: T, b: T) => number;\r\n}\r\n\r\nconst Students: React.FC = () => {\r\n    const { data, loading, error } = useQuery<{ students: studentPreview[] }>(GET_STUDENTS);\r\n    const { items, setSort, setFilter, setItems } = useList<studentPreview>([]);\r\n    const [text, setText] = useState(\"\");\r\n    const sorts: sort<studentPreview>[] = [\r\n        {\r\n            name: \"Классу\",\r\n            sort: (a, b) => a.className > b?.className ? 1 : -1\r\n        },\r\n        {\r\n            name: \"Роли\",\r\n            sort: (a, b) => a.role > b.role ? 1 : -1\r\n        },\r\n        {\r\n            name: \"vkId\",\r\n            sort: (a, b) => a.vkId - b.vkId\r\n        },\r\n        {\r\n            name: \"Имени\",\r\n            sort: (a, b) => a.fullName > b.fullName ? 1 : -1\r\n        },\r\n        {\r\n            name: \"Забаненности\",\r\n            sort: (a, b) => a.banned ? 1 : -1\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (data?.students) {\r\n            setItems(data.students);\r\n        }\r\n    }, [data?.students]);\r\n\r\n    const setSearchText = (str: string): void => {\r\n        str = str.toLowerCase();\r\n        const _class = (item: studentPreview) => item.className;\r\n        setText(str);\r\n        setFilter(item => item.fullName.search(str) !== -1 || _class(item).toLowerCase().search(str) !== -1 || item.role.toLowerCase().search(str) !== -1)\r\n    };\r\n    const setSorting = (name: string) => {\r\n        const sort = sorts.find(e => e.name === name)?.sort;\r\n        if (sort) {\r\n            setSort(sort)\r\n        } else {\r\n            setSort(() => 1)\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Filters className={styles.filter} setSearchText={setSearchText} sortsList={sorts} setSort={setSorting} />\r\n            <Suspender query={{ data, error, loading }}>\r\n                {() =>\r\n                    <div className={styles.students}>\r\n                        {items.map(c => <StudentPreview key={c.vkId} {...c} searchText={text} />)}\r\n                    </div>\r\n\r\n                }\r\n            </Suspender>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Students;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"students\":\"Students_students__1UI4w\",\"filters\":\"Students_filters__1FU3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"classes\":\"Classes_classes__1JV5x\",\"filters\":\"Classes_filters__REtBW\"};","import React, { useContext } from 'react'\r\nimport { UserContext } from \"../../App\";\r\n\r\nimport { FaPen } from \"react-icons/fa\";\r\nimport { MdClose, MdCheck, MdAdd } from \"react-icons/md\";\r\nimport { IoIosTrash } from \"react-icons/io\";\r\n\r\nimport { IconBaseProps } from \"react-icons/lib\";\r\nimport { redactorOptions, roles } from \"../../types\"\r\n\r\ntype Props = {\r\n    include: redactorOptions[] | redactorOptions\r\n    props?: {[key: string]: IconBaseProps & iconSpecialProps} | IconBaseProps & iconSpecialProps\r\n    withRoleControl?: boolean\r\n    allowOnlyAdmin?: boolean\r\n} & IconBaseProps;\r\n\r\nexport type iconSpecialProps = {\r\n    allowOnlyAdmin?: boolean\r\n    allowOnlyRedactor?: boolean\r\n    renderIf?: () => boolean\r\n}\r\n\r\nconst OptionsElements = {\r\n    [redactorOptions.delete]: IoIosTrash,\r\n    [redactorOptions.change]: FaPen,\r\n    [redactorOptions.confirm]: MdCheck,\r\n    [redactorOptions.reject]: MdClose,\r\n    [redactorOptions.add]: MdAdd\r\n}\r\n\r\nconst isSoloIconProps = (\r\n    props: {[key: string]: IconBaseProps & iconSpecialProps} | IconBaseProps & iconSpecialProps\r\n): props is IconBaseProps & iconSpecialProps => {\r\n    const options = Object.values(redactorOptions);\r\n    const keys = Object.keys(props);\r\n\r\n    let flag = true;\r\n\r\n    for(const opt of options) {\r\n        if (keys.includes(opt)) flag = false;\r\n    }\r\n\r\n    return flag;\r\n}\r\n\r\nconst Options: React.FC<Props> = ({ \r\n    include, props = {}, withRoleControl = false, \r\n    allowOnlyAdmin = false, ...iconProps }) => \r\n{\r\n    if (isSoloIconProps(props) && typeof include === 'string') props = {[include]: props};\r\n    if (typeof include === \"string\") include = [include];\r\n\r\n    const {role = roles.student} = useContext(UserContext); \r\n \r\n    if (withRoleControl && role !== roles.admin && (allowOnlyAdmin || role !== roles.contributor)) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {include.map((e, i) => {\r\n                if (isSoloIconProps(props)) {\r\n                    throw new Error(\"If you pass props for one icon you must pass string of icon, not an array\")\r\n                }\r\n\r\n                const {allowOnlyAdmin, allowOnlyRedactor, renderIf, ...restProps} = props[e];\r\n                if (\r\n                    (allowOnlyRedactor && ![roles.admin, roles.contributor].includes(role)) || \r\n                    (allowOnlyAdmin && role !== roles.admin) ||\r\n                     renderIf && !renderIf()\r\n                ) return null;\r\n                return <button key={i}> {React.createElement(OptionsElements[e], {...iconProps, ...restProps})} </button>\r\n            }\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Options)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloClient, { gql, ApolloLink } from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { GET_CLASSES } from \"./components/Content/Classes/Classes\";\nimport { Class } from \"./types\";\n\nconst resolvers = {\n    Mutation: {\n        deleteClass: (\n            _: any,\n            { name }: { name: string },\n            { cache }: { cache: InMemoryCache }\n        ) => {\n            const classes = cache.readQuery<{ classes: Class[] }>({\n                query: GET_CLASSES\n            });\n\n            const newClasses =\n                classes?.classes?.filter((c: Class) => c.name !== name) || [];\n\n            cache.writeQuery({\n                query: GET_CLASSES,\n                data: {\n                    classes: newClasses\n                }\n            });\n\n            return newClasses;\n        },\n        createClass: (\n            _: any,\n            { name }: { name: string },\n            { cache }: { cache: InMemoryCache }\n        ) => {\n            const data = cache.readQuery<{\n                classes: { name: string; studentsCount: number }[];\n            }>({ query: GET_CLASSES });\n\n            if (data !== null) {\n                const newClasses = [\n                    ...data.classes,\n                    {\n                        name,\n                        studentsCount: 0,\n                        __typename: \"Class\",\n                        _id: Date.now().toString()\n                    }\n                ];\n                cache.writeQuery({\n                    query: GET_CLASSES,\n                    data: {\n                        classes: newClasses\n                    }\n                });\n\n                return {\n                    name,\n                    studentsCount: 0,\n                    __typename: \"Class\",\n                    _id: Date.now().toString()\n                };\n            }\n            return null;\n        }\n    }\n}; \n\nconst typeDefs = gql`\n    fragment StudentPreview on Student {\n        vkId\n        className\n        role,\n        banned,\n        fullName\n    }\n    fragment ClassPreview on Class {\n        name\n        studentsCount\n    }\n    extend type Mutation {\n        deleteClass(name: String): [Class]!\n        createClass(name: String): Class!\n    }\n    extend type Query {\n        sidebarOpened: Boolean\n    }\n`;\n\nconst client = new ApolloClient({\n    uri: process.env.NODE_ENV === \"development\" ? \"http://localhost:8080/graphql\" : \"/graphql\",\n    cache: new InMemoryCache({\n        dataIdFromObject: (obj: any) => {\n            if (obj._id) {\n                return obj._id;\n            } else {\n                return null;\n            }\n        }\n    }),\n    resolvers,\n    typeDefs,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App />\n            </React.StrictMode>\n        </BrowserRouter>\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"StudentInfo_info__1Ymgm\",\"nested\":\"StudentInfo_nested__1TL1s\",\"changer\":\"StudentInfo_changer__h8fXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"ClassPreview_preview__2shJn\",\"link\":\"ClassPreview_link__4ll1M\",\"name\":\"ClassPreview_name__2Y8xa\",\"remove\":\"ClassPreview_remove__1efHk\",\"wrapper\":\"ClassPreview_wrapper__zis8n\",\"creator\":\"ClassPreview_creator__1ZeiZ\",\"creator_stab\":\"ClassPreview_creator_stab__1ZON7\",\"with_error\":\"ClassPreview_with_error__1ziVu\",\"reject\":\"ClassPreview_reject__1hamE\",\"confirm\":\"ClassPreview_confirm__jvhjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2WupE\",\"opened\":\"Sidebar_opened__1EtRw\",\"closed\":\"Sidebar_closed__1flj4\",\"check\":\"Sidebar_check__3fHhr\",\"link\":\"Sidebar_link__t3vmZ\",\"active\":\"Sidebar_active__37KeR\",\"userInfo\":\"Sidebar_userInfo__3SDcZ\",\"hamb\":\"Sidebar_hamb__1VJx6\"};","import React, { Component, ReactElement } from 'react'\r\n\r\ninterface Props {\r\n    query?: {\r\n        loading: boolean\r\n        data: any\r\n        error?: any\r\n    }\r\n    queries?: {\r\n        loading: boolean\r\n        data: any\r\n        error?: any\r\n    }[]\r\n    children: (...data: any) => ReactElement | null\r\n}\r\n\r\nconst Suspender: React.FC<Props> = ({ query, children, queries }) => {\r\n    if (queries) {\r\n        if (queries.some(q => q.error)) return <div> {queries.map((q, i) => <span key={\"SuspenderErrorSpan\" + i}> {q.error && JSON.stringify(q.error, null, 2)} <br /></span>)} </div>;\r\n        if (queries.some(q => q.loading)) return <div> loading... </div>;\r\n        else if (queries.every(q => q.data)) return children(...(queries.map(q => q.data)))\r\n    } else if (query) {\r\n        const { error, loading, data } = query;\r\n        if (error) return <div> {JSON.stringify(error, null, 2)} </div>;\r\n        else if (loading) return <div> loading... </div>\r\n        else if (data && children) return children(data)\r\n    }\r\n    else {\r\n        return <div> Ошибочка </div>\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Suspender","// extracted by mini-css-extract-plugin\nmodule.exports = {\"days\":\"ScheduleSection_days__3q5Ka\",\"day\":\"ScheduleSection_day__1vyXS\",\"lessons\":\"ScheduleSection_lessons__2YKwz\",\"dayName\":\"ScheduleSection_dayName__2YlSO\",\"lesson\":\"ScheduleSection_lesson__2VgGS\",\"addLesson\":\"ScheduleSection_addLesson__1o9eX\",\"lessonChange\":\"ScheduleSection_lessonChange__3byuj\",\"selectLesson\":\"ScheduleSection_selectLesson__3QoXk\",\"removeLesson\":\"ScheduleSection_removeLesson__1WgRJ\",\"pen\":\"ScheduleSection_pen__1rpG9\",\"changers\":\"ScheduleSection_changers__kapIC\",\"changer\":\"ScheduleSection_changer__geJuc\"};","import React from \"react\";\r\nimport { content } from \"../types\";\r\nimport { parseDate, months } from \"./date\";\r\nimport { MdDateRange } from \"react-icons/md\";\r\n\r\nexport const highlightSearch = (str: string, searchString: string, highlightClass = \"highlight\") => {\r\n    if (searchString.trim() !== \"\") {\r\n        const string = str.toLowerCase();\r\n        searchString = searchString.toLowerCase();\r\n        const ind = string.search(searchString);\r\n        if (ind !== -1) {\r\n            return <span> {str.slice(0, ind)} <span className={highlightClass}> {str.slice(ind, ind + searchString.length)} </span> {str.slice(ind + searchString.length, str.length - ind + searchString.length)} </span>\r\n        }\r\n    }\r\n    return <span> {str} </span>\r\n};\r\n\r\nexport const parseContentByDate = <T extends content>(content: T[]): [{ [day: string]: T[] },{ [day: string]: T[] }] => {\r\n    const parsedFutureCont: { [day: string]: T[] } = {};\r\n    const parsedPastCont: { [day: string]: T[] } = {};\r\n\r\n    content.sort((a, b) => Date.parse(a.to) - Date.parse(b.to));\r\n\r\n    for (let cont of content) {\r\n        const contDate = parseDate(cont.to, \"dd MM\");\r\n\r\n        if (Date.parse(cont.to) > Date.now()) {\r\n            parsedFutureCont[contDate] = [...(parsedFutureCont[contDate] || []), cont]; \r\n        } else {\r\n            parsedPastCont[contDate] = [...(parsedPastCont[contDate] || []), cont];\r\n        }\r\n    }\r\n\r\n    return [parsedPastCont, parsedFutureCont];\r\n}\r\n\r\nexport const objectForEach = <T extends {[key: string]: ValueType}, ValueType, Output>(object: T, fn: (value: ValueType) => Output): {[key: string]: Output} => {\r\n    const entries: [keyof T, ValueType][] = Object.entries(object);\r\n    const mappedEntries = entries.map(([key, value]) => [key, fn(value)]);\r\n\r\n    return Object.fromEntries(mappedEntries);\r\n}\r\n\r\nexport const getDateStrFromDayMonthStr = (dayMonthStr: string): string => {\r\n    if (new RegExp(`\\\\d\\\\s(${Object.values(months).join(\"|\")})`,\"i\").test(dayMonthStr)) {\r\n        const [day, month] = dayMonthStr.split(\" \");\r\n        if (months.indexOf(month) !== -1 && !isNaN(Number(day))) {\r\n            const monthIndex = months.indexOf(month);\r\n\r\n            const date = new Date(new Date().getFullYear(),monthIndex, Number(day));\r\n\r\n            return date.toISOString();\r\n        } \r\n    } \r\n    return \"\";\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"student\":\"StudentPage_student__35x4H\",\"header\":\"StudentPage_header__2dllD\",\"info\":\"StudentPage_info__1vBbh\",\"vkId\":\"StudentPage_vkId__21U-K\",\"name\":\"StudentPage_name__SPqIK\",\"icons\":\"StudentPage_icons__3Fgbh\",\"icon\":\"StudentPage_icon__1efPx\",\"pen\":\"StudentPage_pen__2ZNGy\",\"trash\":\"StudentPage_trash__4aQTV\",\"ban\":\"StudentPage_ban__2-mDG\",\"close\":\"StudentPage_close__2OyIZ\",\"unban\":\"StudentPage_unban__cqPJT\",\"check\":\"StudentPage_check__hRCaY\",\"body\":\"StudentPage_body__2Fb8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentChanger\":\"ChangeContent_contentChanger__12-4F\",\"header\":\"ChangeContent_header__3aPBy\",\"text\":\"ChangeContent_text__1ahJ0\",\"title\":\"ChangeContent_title__1Hr35\",\"uploaderIcon\":\"ChangeContent_uploaderIcon__OJQN4\",\"datePickerInput\":\"ChangeContent_datePickerInput__3r1lT\",\"datePickerCalendar\":\"ChangeContent_datePickerCalendar__3SGbg\",\"attachmentsContainer\":\"ChangeContent_attachmentsContainer__3IZm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview\":\"StudentPreview_preview__1lor8\",\"link\":\"StudentPreview_link__1sI1z\",\"info\":\"StudentPreview_info__1csGq\",\"ban\":\"StudentPreview_ban__1DKmG\",\"unban\":\"StudentPreview_unban__16vF7\",\"button\":\"StudentPreview_button__1xz_x\",\"banned\":\"StudentPreview_banned__1NUVJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"next\":\"OpenableImage_next__3-Tqb\",\"prev\":\"OpenableImage_prev__1sXgd\",\"deletableAttachment\":\"OpenableImage_deletableAttachment__jaRwb\",\"removeAttachment\":\"OpenableImage_removeAttachment__1RJcn\"};","import React, { memo } from \"react\";\r\nimport styles from \"./ClassPreview.module.css\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { highlightSearch } from \"../../../../utils/functions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { redactorOptions } from \"../../../../types\";\r\nimport Options from \"../../../Common/Options\";\r\nimport Confirm from \"../../../Common/Confirm/Confirm\";\r\nimport { useState } from \"react\";\r\n\r\ntype Props = {\r\n    className: string,\r\n    studentsCount: number,\r\n    searchText: string\r\n}\r\n\r\n// language=GraphQL\r\nconst DELETE_CLASS = gql`\r\n    mutation RemoveOne($className: String!){\r\n        classRemoveOne(className: $className) {\r\n            name\r\n            __typename\r\n        }\r\n        deleteClass(name: $className) @client\r\n    }\r\n`;\r\n//TODO добавить модалку спрашивающую уверен ли ты в удалении класса\r\nconst ClassPreview: React.FC<Props> = ({ className, studentsCount, searchText }) => {\r\n    const [deleteClass, { error, data }] = useMutation<{ classRemoveOne: { record: { name: string } } },\r\n        { className: string }>\r\n        (DELETE_CLASS, {\r\n            variables: { className }\r\n        }\r\n        );\r\n\r\n    const [waitForConfirm, setWaitForConfirm] = useState(false);\r\n\r\n    const highlighter = (str: string) => {\r\n        return highlightSearch(str, searchText);\r\n    };\r\n\r\n    if (error) console.error(error);\r\n    if (data) {\r\n        return (\r\n            <div className={styles.preview} style={{ backgroundColor: \"var(--secondary)\" }}>\r\n                <div className={styles.firstRow} />\r\n                <div className={styles.secondRow} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.preview}>\r\n                <Link to={`/classes/${className}`} className={styles.link}>\r\n                    <p className={styles.name}> {highlighter(className)} </p>\r\n                    <div className={styles.count}> Учеников: {highlighter(String(studentsCount))} </div>\r\n                    <div></div>\r\n                </Link>\r\n                <Options \r\n                    include={redactorOptions.delete}\r\n                    props={{\r\n                        onClick: () => setWaitForConfirm(true),\r\n                        size: 20,\r\n                        className: \"remove\"\r\n                    }}\r\n                />\r\n            </div>\r\n            {waitForConfirm &&\r\n                <Confirm text={`Вы уверены что хотите удалить ${className} класс`} onConfirm={() => deleteClass()} returnRes={() => setWaitForConfirm(false)} />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default memo(ClassPreview);","import React, { MouseEvent, useState } from \"react\";\r\nimport styles from \"./ClassPreview.module.css\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { GET_CLASSES, classPreview } from \"../Classes\";\r\nimport { redactorOptions, WithTypename } from \"../../../../types\";\r\nimport Options from \"../../../Common/Options\";\r\nconst CREATE_CLASS = gql`\r\n    mutation CreateClass($name: String!) {\r\n#        createClass(name: $name) @client\r\n        classCreateOne(className: $name) {\r\n            name\r\n            __typename\r\n            studentsCount\r\n        }\r\n    }\r\n`;\r\n\r\nconst ClassCreator: React.FC = () => {\r\n    const [creating, setCreating] = useState<boolean>(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [createClass] = useMutation<{ classCreateOne: { name: string, studentsCount: number, __typename: string } },\r\n        { name: string }>(CREATE_CLASS, {\r\n            variables: {\r\n                name: name.toUpperCase().replace(/\\s/g, \"\")\r\n            },\r\n            optimisticResponse: {\r\n                classCreateOne: {\r\n                    name,\r\n                    studentsCount: 0,\r\n                    __typename: \"Class\"\r\n                }\r\n            },\r\n            update: (proxy, data) => {\r\n                if (data.data) {\r\n                    proxy.writeQuery({\r\n                        query: GET_CLASSES,\r\n                        data: {\r\n                            classes: proxy.readQuery<{ classes: WithTypename<classPreview>[] }>({ query: GET_CLASSES })?.classes.concat([data.data?.classCreateOne])\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n    const clear = (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        setCreating(false);\r\n        setName(\"\");\r\n        setError(null);\r\n    };\r\n\r\n    const confirm = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (matchClassName(name)) {\r\n            createClass();\r\n            setCreating(false);\r\n            setName(\"\");\r\n            setError(null);\r\n        } else {\r\n            setName(\"\");\r\n            setError(\"Неверное имя класса\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper} >\r\n            <div className={`${styles.creator} ${!creating ? styles.creator_stab : \"\"} ${styles.preview}`} onClick={() => setCreating(true)}>\r\n                {creating ?\r\n                    <form onSubmit={confirm} className={styles.form}>\r\n                        <Options \r\n                            include={redactorOptions.reject} \r\n                            size={20} onClick={clear}\r\n                            className={`reject ${styles.button}`} />\r\n                        <input \r\n                            onChange={(e) => setName(e.target.value)} value={name} \r\n                            autoFocus={true} type=\"text\"\r\n                            placeholder={error ?? \"Имя класса в формате цифра буква\"}\r\n                            className={`${error ? styles.with_error : \"\"} ${styles.input}`} />\r\n                        <Options \r\n                            include={redactorOptions.confirm} \r\n                            size={20} onClick={confirm} \r\n                            className={`confirm ${styles.button}`} />\r\n                    </form> :\r\n                    \"Create class\" \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst matchClassName = (name: string): readonly [number, string] | null => {\r\n    if (/([0-9]{1,2})\\s*([A-Z]|[А-Я]){1}/i.test(name)) {\r\n        const res = name.match(/([0-9]{1,2})\\s*([A-Z]|[А-Я]){1}/i);\r\n\r\n        if (res !== null) {\r\n            const [_, digit, letter] = res;\r\n\r\n            if (+digit > 0 && +digit <= 12) {\r\n                return [+digit, letter] as const;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default ClassCreator;","import React, { useEffect, useState } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport ClassPreview from \"./ClassPreview/ClassPreview\";\r\nimport styles from \"./Classes.module.css\";\r\nimport ClassCreator from \"./ClassPreview/ClassCreator\";\r\nimport Filters from \"../../Filters/Filters\";\r\nimport { sort } from \"../Students/Students\";\r\nimport useList from \"../../../hooks/useList\";\r\nimport Suspender from \"../../Common/Suspender\";\r\n\r\nexport const GET_CLASSES = gql`\r\n  query GetClasses {\r\n    classes: classMany {\r\n      studentsCount\r\n      name\r\n      __typename\r\n    }\r\n  }\r\n`;\r\n\r\nexport type classesData = {\r\n  classes: classPreview[];\r\n};\r\n\r\nexport type classPreview = {\r\n  studentsCount: number;\r\n  name: string;\r\n};\r\n\r\nconst Classes: React.FC = () => {\r\n  const query = useQuery<classesData>(GET_CLASSES);\r\n  const { items, setFilter, setSort, setItems } = useList<classPreview>([]);\r\n  const [searchText, setText] = useState(\"\");\r\n  const sorts: sort[] = [\r\n    {\r\n      name: \"Кол-ву учеников\",\r\n      sort: (a: classPreview, b: classPreview) =>\r\n        a.studentsCount > b.studentsCount ? -1 : 1\r\n    },\r\n    {\r\n      name: \"Имени\",\r\n      sort: (a: classPreview, b: classPreview) => (a.name > b.name ? 1 : -1)\r\n    }\r\n  ];\r\n\r\n  const setSearchText = (str: string) => {\r\n    str = str.toLowerCase();\r\n    setText(str);\r\n    setFilter(\r\n      (c: classPreview) =>\r\n        c.name.toLowerCase().search(str) !== -1 ||\r\n        c.studentsCount\r\n          .toString()\r\n          .toLowerCase()\r\n          .search(str) !== -1\r\n    );\r\n  };\r\n  const setSorting = (name: string) => {\r\n    const sort = sorts.find(sort => sort.name === name)?.sort;\r\n    if (sort) {\r\n      setSort(sort);\r\n    } else {\r\n      setSort(() => 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query.data?.classes) {\r\n      setItems(query.data.classes);\r\n    }\r\n  }, [query.data?.classes]);\r\n\r\n  return (\r\n    <Suspender query={query}>\r\n      {() =>\r\n        <div>\r\n          <Filters\r\n            className={styles.filters}\r\n            setSearchText={setSearchText}\r\n            sortsList={sorts}\r\n            setSort={setSorting}\r\n          />\r\n          <ClassCreator />\r\n          <div className={styles.classes}>\r\n            {items.map(c => (\r\n              <ClassPreview\r\n                searchText={searchText}\r\n                key={c.name}\r\n                className={c.name}\r\n                studentsCount={c.studentsCount}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      }\r\n    </Suspender>\r\n  );\r\n};\r\n\r\nexport default Classes;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Confirm_container__33FAp\",\"text\":\"Confirm_text__3dBJ7\",\"options\":\"Confirm_options__3Qx7U\",\"btn\":\"Confirm_btn__MeP3E\",\"confirm\":\"Confirm_confirm__1kCU6\",\"reject\":\"Confirm_reject__2ALzd\"};","const formStrs = [\"Y\", \"M\", \"d\", \"h\", \"m\", \"s\", \"ms\"];\r\n\r\nexport const months = [\r\n  \"Января\",\r\n  \"Февраля\",\r\n  \"Марта\",\r\n  \"Апреля\",\r\n  \"Мая\",\r\n  \"Июня\",\r\n  \"Июля\",\r\n  \"Августа\",\r\n  \"Сентября\",\r\n  \"Октября\",\r\n  \"Ноября\",\r\n  \"Декабря\",\r\n];\r\n\r\nexport const parseDate = (dateStr: string | Date, format: string): string => {\r\n  if (typeof dateStr !== \"object\" ? !isNaN(Date.parse(dateStr)) : dateStr) {\r\n    const date = new Date(dateStr);\r\n    for (const str of formStrs) {\r\n      const match = format.match(RegExp(`${str}+`));\r\n      if (match) {\r\n        const ms = match[0];\r\n        switch (str) {\r\n          case \"Y\": {\r\n            if (ms.length == 4 || ms.length == 2) {\r\n              if (ms.length == 4) {\r\n                format = format.replace(/Y+/i, String(date.getFullYear()));\r\n              } else {\r\n                format = format.replace(\r\n                  /Y+/i,\r\n                  String(date.getFullYear() % 100)\r\n                );\r\n              }\r\n            } else {\r\n              throw new Error(\"Year must be 2 or 4 length\");\r\n            }\r\n            break;\r\n          }\r\n          case \"M\": {\r\n            if (ms.length == 2) {\r\n              if (format.match(RegExp(`${str}+n`))) {\r\n                format = format.replace(/M+n/i, String(date.getMonth() + 1));\r\n              } else {\r\n                format = format.replace(/M+/i, String(months[date.getMonth()]));\r\n              }\r\n            } else {\r\n              throw new Error(\"Month must be 2 length\");\r\n            }\r\n            break;\r\n          }\r\n          case \"d\": {\r\n            if (ms.length == 2) {\r\n              format = format.replace(/d+/i, String(date.getDate()));\r\n            } else {\r\n              throw new Error(\"Day must be 2 length\");\r\n            }\r\n            break;\r\n          }\r\n          case \"h\": {\r\n            if (ms.length == 2) {\r\n              format = format.replace(/h+/i, String(date.getHours()));\r\n            } else {\r\n              throw new Error(\"Hours must be 2 length\");\r\n            }\r\n            break;\r\n          }\r\n          case \"m\": {\r\n            if (ms.length == 2) {\r\n              format = format.replace(/m+/i, String(date.getMinutes()));\r\n            } else {\r\n              throw new Error(\"Minutes must be 2 length\");\r\n            }\r\n            break;\r\n          }\r\n          case \"s\": {\r\n            if (ms.length == 2) {\r\n              format = format.replace(/s+/i, String(date.getSeconds()));\r\n            } else {\r\n              throw new Error(\"Seconds must be 2 length\");\r\n            }\r\n            break;\r\n          }\r\n          case \"ms\": {\r\n            if (ms.length == 4) {\r\n              format = format.replace(/ms+/i, String(date.getMilliseconds()));\r\n            } else {\r\n              throw new Error(\"Minutes must be 4 length\");\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return format;\r\n  } else {\r\n    throw new Error(\"Date str must be date iso string\");\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"students\":\"StudentSection_students__1rLZ7\",\"student\":\"StudentSection_student__2hIL3\",\"remove\":\"StudentSection_remove__3ChUr\",\"creator\":\"StudentSection_creator__2Y1zR\",\"chooseStudent\":\"StudentSection_chooseStudent__7KBu6\",\"title\":\"StudentSection_title__1M9dd\",\"studentsChooser\":\"StudentSection_studentsChooser__3YDcw\",\"chooser\":\"StudentSection_chooser__2cEEQ\",\"chooser_name\":\"StudentSection_chooser_name__1Gcvk\",\"chooser_vkId\":\"StudentSection_chooser_vkId__-ImTl\",\"chooser_className\":\"StudentSection_chooser_className__3RSo-\"};","import React, { memo } from \"react\";\r\nimport styles from \"./StudentPreview.module.css\";\r\nimport { roles } from \"../../../../types\";\r\nimport { FaRegCheckCircle, FaRegTimesCircle } from \"react-icons/fa\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { highlightSearch } from \"../../../../utils/functions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GiSpiralTentacle } from \"react-icons/gi\";\r\n\r\ntype Props = {\r\n    vkId: number\r\n    className: string\r\n    banned: boolean\r\n    role: roles,\r\n    searchText?: string\r\n    fullName: string, \r\n    _id: string\r\n}\r\n\r\nexport const BAN = gql`\r\n    mutation BanStudent($vkId: Int!, $isBan: Boolean){\r\n        banStudent(vkId: $vkId, isBan: $isBan) {\r\n            banned\r\n            _id\r\n            __typename\r\n        }\r\n    }\r\n`;\r\n\r\nconst StudentPreview: React.FC<Props> = ({ vkId, role, banned, className, searchText, fullName: name, _id }) => {\r\n    const [banStudent] = useMutation<\r\n        { banStudent: { banned: boolean, _id: string, __typename: string }, __typename: string }, { vkId: number, isBan?: boolean }\r\n    >(BAN, {\r\n        variables: {\r\n            vkId,\r\n            isBan: !banned\r\n        },\r\n        optimisticResponse: {\r\n            __typename: \"Mutation\",\r\n            banStudent: {\r\n                banned: !banned,\r\n                _id,\r\n                __typename: \"Student\"\r\n            }\r\n        }\r\n    });\r\n\r\n    const highlighter = (str: string) => {\r\n        return highlightSearch(str, searchText || \"\");\r\n    };\r\n    //TODO добавить обновление кеша после изменения чтоб на странице полхователей + классов тоже все менялось \r\n    return (\r\n        <div className={`${styles.preview} ${banned && styles.banned}`}>\r\n            <Link to={`/students/${vkId}`} className={`${styles.link}`}>\r\n                <span className={styles.info}> {highlighter(getPrettyName(name))} </span>\r\n                <span className={styles.info}> {highlighter(getPrettyName(role))} </span>\r\n                <span className={styles.info}> {highlighter(getPrettyName(className))} </span>\r\n            </Link>\r\n            {banned ?\r\n                <FaRegCheckCircle size={20} onClick={() => { banStudent() }} className={`unban ${styles.button}`} /> :\r\n                <FaRegTimesCircle size={20} onClick={() => { banStudent() }} className={`ban ${styles.button}`} />\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default memo(StudentPreview);\r\n\r\nfunction getPrettyName(name: string): string {\r\n    if (!name) return \"Error empty name\"\r\n    return name.split(\" \")[0] + \" \" + (name.split(\" \")[1]?.[0]?.toUpperCase() || \"\");\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default <T>(values: T[], defaultFilter: ((items: T) => boolean) = () => true, defaultSort: ((a: T, b: T) => number) = () => 0) => {\r\n    const [initialValues, setInitialValues] = useState<T[]>([]);\r\n    const [items, setItems] = useState<T[]>(values.filter(defaultFilter).sort(defaultSort));\r\n\r\n    const setFilter = (filter: typeof defaultFilter) => {\r\n        setItems(initialValues.filter(filter));\r\n    };\r\n    const setSort = (sort: typeof defaultSort) => {\r\n        setItems([...initialValues.sort(sort)]);\r\n    };\r\n\r\n    return { items, setFilter, setSort, setItems: (vals: T[]) => { setInitialValues(vals); setItems(vals) } };\r\n};\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport styles from './Confirm.module.css'\r\n\r\nconst modalRoot = document.querySelector(\"#confirmModal\");\r\n\r\ntype Props = {\r\n    text?: string,\r\n    returnRes?: (res: boolean) => void\r\n    onConfirm?: () => void\r\n    onReject?: () => void\r\n    confirmElement?: JSX.Element,\r\n    rejectElement?: JSX.Element\r\n}\r\n\r\nconst Confirm: React.FC<Props> = ({\r\n    text = \"Вы уверены что хотите совершить это действие\", returnRes,\r\n    confirmElement, onConfirm, onReject, rejectElement\r\n}) => {\r\n\r\n    const chooseHandler = (res: boolean) => {\r\n        if (res) onConfirm?.()\r\n        else onReject?.()\r\n\r\n        returnRes?.(res);\r\n    }\r\n\r\n    return modalRoot && ReactDOM.createPortal(\r\n        <div className={\"modal\"}>\r\n            <div className={styles.container}>\r\n                <span className={styles.text}>{text}</span>\r\n                <div className={styles.options}>\r\n                    {confirmElement \r\n                        ? rejectElement\r\n                        : <button onClick={() => chooseHandler(false)} className={`${styles.btn} ${styles.reject}`}>Нет</button>\r\n                    }\r\n                    {rejectElement \r\n                        ? confirmElement\r\n                        : <button onClick={() => chooseHandler(true)} className={`${styles.btn} ${styles.confirm}`}>Да</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        modalRoot\r\n    )\r\n}\r\n\r\nexport default Confirm","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"InfoSection_section__2atD5\",\"header\":\"InfoSection_header__12h4j\",\"name\":\"InfoSection_name__KAhQy\",\"triangle_opened\":\"InfoSection_triangle_opened__3IWZR\",\"content\":\"InfoSection_content__3JIV4\",\"search\":\"InfoSection_search__noItu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filters_filterContainer__3Rp10\",\"filters\":\"Filters_filters__1g5Lf\",\"search\":\"Filters_search__2ZSJ3\",\"sorts\":\"Filters_sorts__193FZ\"};","export enum roles {\r\n    student = \"STUDENT\",\r\n    admin = \"ADMIN\",\r\n    contributor = \"CONTRIBUTOR\",\r\n}\r\nexport enum redactorOptions {\r\n    delete = \"DELETE\",\r\n    change = \"CHANGE\",\r\n    confirm = \"CONFIRM\",\r\n    reject = \"REJECT\",\r\n    add = \"ADD\",\r\n}\r\n\r\nexport const lessons = [\r\n    \"Математика\",\r\n    \"Английский\",\r\n    \"Русский\",\r\n    \"Экономика\",\r\n    \"География\",\r\n    \"Физика\",\r\n    \"Алгебра\",\r\n    \"Геометрия\",\r\n    \"Литература\",\r\n    \"История\",\r\n    \"Обществознание\",\r\n    \"Астрономия\",\r\n    \"ОБЖ\",\r\n    \"Информатика\",\r\n];\r\n\r\nexport type Student = {\r\n    class: string;\r\n    role: roles;\r\n    vkId: number;\r\n    settings: studentSettings;\r\n    lastHomeworkCheck: string;\r\n    banned: boolean;\r\n    fullName: string;\r\n    className: string;\r\n    _id: string;\r\n};\r\n\r\nexport type studentSettings = {\r\n    notificationsEnabled: boolean;\r\n    notificationTime: string;\r\n};\r\n\r\nexport type attachment = {\r\n    url: string;\r\n    value: string;\r\n    _id: string;\r\n};\r\nexport type size = {\r\n    url: string;\r\n    width: number;\r\n    height: number;\r\n};\r\nexport type vkPhoto = {\r\n    id: number;\r\n    album_id: number;\r\n    owner_id: number;\r\n    user_id: number;\r\n    text: string;\r\n    date: number;\r\n    sizes: size[];\r\n};\r\n\r\nexport type content = {\r\n    attachments: WithTypename<attachment>[];\r\n    text: string;\r\n    _id?: string;\r\n    to: string;\r\n    ceratedBy?: number;\r\n};\r\n\r\nexport type homework = {\r\n    lesson: string;\r\n} & content;\r\n\r\nexport type Class = {\r\n    students: string[];\r\n    name: string;\r\n    homework: homework[];\r\n    schedule: string[][];\r\n    changes: change[];\r\n    roleUpCodes: string[];\r\n    fullName: string;\r\n};\r\n\r\nexport type change = content;\r\nexport type WithTypename<T> = T & { __typename: string };\r\n\r\nexport type User = {\r\n    last_name: string;\r\n    first_name: string;\r\n    uid: number;\r\n    photo: string;\r\n    photo_rec: string;\r\n    role: roles;\r\n    className: string;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"class\":\"ClassPage_class__3QktT\",\"header\":\"ClassPage_header__2hPm6\",\"className\":\"ClassPage_className__2uScq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentChanger\":\"ContentChanger_contentChanger__2VEle\",\"header\":\"ContentChanger_header__2HZcT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ContentSection_content__30jxd\",\"contentCreator\":\"ContentSection_contentCreator__3KZrm\",\"confirmReject\":\"ContentSection_confirmReject__2FMaC\",\"title\":\"ContentSection_title__1heCx\",\"lessonPicker\":\"ContentSection_lessonPicker__mnElv\",\"addition\":\"ContentSection_addition__5UtaH\",\"offseted\":\"ContentSection_offseted__3oi0u\",\"text\":\"ContentSection_text__WbjBQ\",\"sectionHeader\":\"ContentSection_sectionHeader__28gmm\",\"addContent\":\"ContentSection_addContent__1DJPX\",\"contentHeader\":\"ContentSection_contentHeader__96G_n\",\"oldContentHeader\":\"ContentSection_oldContentHeader__8fTWM\",\"removeOldContent\":\"ContentSection_removeOldContent__GCCCO\",\"date\":\"ContentSection_date__2lAsa\",\"lesson\":\"ContentSection_lesson__3YkAK\",\"accordion\":\"ContentSection_accordion__3jwwC\",\"triangle_opened\":\"ContentSection_triangle_opened__3Y-Oq\",\"elements\":\"ContentSection_elements__2UZ1N\",\"container\":\"ContentSection_container__5RMFh\",\"pair\":\"ContentSection_pair__2mgVI\",\"element\":\"ContentSection_element__1HrRa\",\"attachments\":\"ContentSection_attachments__hhBYd\",\"stab\":\"ContentSection_stab__260Ri\",\"fullText\":\"ContentSection_fullText__2W_7h\",\"controls\":\"ContentSection_controls__1Mfs5\",\"remove\":\"ContentSection_remove__o9pM6\",\"contentContentChanger\":\"ContentSection_contentContentChanger__1PINq\"};","import React, {useState} from \"react\";\r\nimport styles from \"./Filters.module.css\";\r\nimport {sort} from \"../Content/Students/Students\";\r\n\r\ninterface Props {\r\n    sortsList?: sort[]\r\n    setSort?: (fn: string) => void\r\n    searchText?: string\r\n    setSearchText?: (str: string) => void\r\n\r\n    [key: string]: any\r\n}\r\n\r\nconst Filters: React.FC<Props> = ({sortsList, setSearchText, setSort, ...props}) => {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    return (\r\n        <div {...props} className={props.className || styles.filterContainer}>\r\n            <div className={styles.filters}>\r\n                {setSearchText &&\r\n                <div className={styles.search}>\r\n                    <input style={{color: \"var(--main)\"}} placeholder=\"Поиск\" type=\"text\" onChange={(e) => {\r\n                        setText(e.target.value);\r\n                        setSearchText(e.target.value)\r\n                    }} value={text}/>\r\n                </div>\r\n                }\r\n                {sortsList?.length && setSort &&\r\n                <div className={styles.sorts}>\r\n                    <select onChange={e => setSort(e.target.value)} name=\"sorts\" id=\"sorts\">\r\n                        <option key=\"none\" value=\"none\"> Сортировать по</option>\r\n                        {\r\n                            sortsList.map(({name}) => <option key={name} value={name}>{name}</option>)\r\n                        }\r\n                    </select>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;","// <reference path=\"../../global.d.ts\" />\r\n// @ts-check\r\n\r\nimport React from \"react\";\r\nimport styles from \"./Sidebar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\nimport { FaChevronLeft } from \"react-icons/fa\";\r\nimport { roles, User } from \"../../types\";\r\nimport { UserContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nconst UserInfo: React.FC<\r\n    {userInfo: Pick<User, \"photo_rec\" | \"first_name\" | \"last_name\">, resetUser: () => void}\r\n> = ({userInfo: {first_name, last_name, photo_rec}, resetUser}) => {\r\n    const logOut = () => {\r\n        resetUser();\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n    return <div className={styles.userInfo}>\r\n        <img src={\"https://vk.com\" + photo_rec} alt=\"Фото пользователя\"/>\r\n        <span className={styles.userName}>{first_name} {last_name}</span>\r\n        <button className={styles.logOut} onClick={logOut}> Выйти </button>\r\n    </div>\r\n}\r\n\r\nconst Sidebar: React.FC<{setUser: (user: User | null) => void}> = ({setUser}) => {\r\n    const {first_name, last_name, photo_rec, role, className, uid} = useContext(UserContext);\r\n\r\n    return (\r\n        <div onMouseDown={e => e.stopPropagation()} className={styles.sidebar}>\r\n            <input type=\"checkbox\" id={styles.check} />\r\n            <label htmlFor={styles.check}>\r\n                <FaChevronLeft className={styles.opened} size={20} />\r\n                <GiHamburgerMenu className={styles.closed} size={20}/>\r\n            </label>\r\n\r\n            {role === roles.admin \r\n                ? <>\r\n                    <NavLink to=\"/classes\" className={styles.link} activeClassName={styles.active}> Классы </NavLink>\r\n                    <NavLink to=\"/students\" className={styles.link} activeClassName={styles.active}> Ученики </NavLink>\r\n                </>\r\n                : <>\r\n                    <NavLink to={`/classes/${className}`} className={styles.link} activeClassName={styles.active}> Класс </NavLink>\r\n                    <NavLink to={`/students/${uid}`} className={styles.link} activeClassName={styles.active}> Ученик </NavLink>\r\n                </>    \r\n            }\r\n            {first_name && last_name && photo_rec &&\r\n                <NavLink to={`/students/${uid}`} className={styles.userInfo}>\r\n                    <UserInfo userInfo={{first_name, last_name, photo_rec}} resetUser={() => setUser(null)}/>\r\n                </NavLink>\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default Sidebar;","import React from \"react\";\r\nimport styles from \"./StudentInfo.module.css\";\r\nimport StudentInfo, { infos } from \"./StudentInfo\";\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { parseDate } from '../../../../utils/date';\r\n\r\nexport type changeHandler<T = string | number | boolean> = (path: string, value: T) => void\r\ntype SelectorProps = {\r\n    options?: string[]\r\n    defaultValue: string\r\n    changeHandler: (value: string) => void\r\n}\r\nconst Selector: React.FC<SelectorProps> = ({ changeHandler, defaultValue, options = [\"     \"] }) => {\r\n    return (\r\n        <select onChange={(e) => changeHandler(e.target.value)}>\r\n            <option key={defaultValue} value={defaultValue}>{defaultValue}</option>\r\n            {options.map(option => option !== defaultValue && <option key={option} value={option}>{option}</option>)}\r\n        </select>\r\n    )\r\n}\r\n\r\ntype Props<T> = {\r\n    value: T\r\n    name: string\r\n    changeHandler: changeHandler\r\n}\r\n\r\nconst GET_INFO = gql`\r\n    {\r\n        classes: classMany {\r\n            name\r\n        }\r\n        roles: getRoles\r\n    }\r\n`\r\n\r\nconst Changer: React.FC<Props<string | number | boolean | object>> = ({ name, value, changeHandler }) => {\r\n    const { data, loading, error } = useQuery<{ classes: { name: string }[], roles: string[] }>(GET_INFO);\r\n\r\n    if (error) return <div>{error}</div>\r\n    return (\r\n        <div className={`${styles.changing}`}>\r\n            {typeof value == \"string\" &&\r\n                <>{name === \"className\" || name === \"role\" || name === \"notificationTime\" ?\r\n                    <>\r\n                        {name === \"className\" &&\r\n                            <div className={styles.changer}>\r\n                                {infos[name] || name}: <Selector changeHandler={(change) => changeHandler(name, change)} defaultValue={value} options={data?.classes.map(obj => obj.name).concat([\"Нету\"])} />\r\n                            </div>\r\n                        }\r\n                        {name === \"role\" &&\r\n                            <div className={styles.changer}>\r\n                                {infos[name] || name}: <Selector changeHandler={(change) => changeHandler(name, change)} defaultValue={value} options={data?.roles} />\r\n                            </div>\r\n                        }\r\n                        {name === \"notificationTime\" &&\r\n                            <div className={styles.changer}>\r\n                                {infos[name] || name}: <input\r\n                                    type=\"text\" className={`${styles.changeString}`} defaultValue={value}\r\n                                    onChange={e => changeHandler(name, e.target.value)} />\r\n                            </div>\r\n                        }\r\n                    </> :\r\n                    <div className={styles.changer}>\r\n                        {infos[name] || name}: <input type=\"text\" className={`${styles.changeString}`} defaultValue={value} onChange={(e) => changeHandler(name, e.target.value)} />\r\n                    </div>\r\n                }\r\n                </>\r\n            }\r\n            {typeof value === \"number\" &&\r\n                <div className={styles.changer}>\r\n                    {infos[name] || name}: <input type=\"number\" className={`${styles.changeNumber}`} defaultValue={value} onChange={(e) => changeHandler(name, +e.target.value)} />\r\n                </div>\r\n            }\r\n            {typeof value === \"boolean\" &&\r\n                <div className={styles.changer}>\r\n                    {infos[name] || name}: <input type=\"checkbox\" className={`${styles.changeBool}`} defaultChecked={value} onChange={(e) => changeHandler(name, e.target.checked)} />\r\n                </div>\r\n            }\r\n            {\r\n                typeof value === \"object\" &&\r\n                <div className={`${styles.changer}`}>\r\n                    {infos[name] || name}:\r\n                                <div className={styles.nested}>\r\n                        {Object.entries(value).map(entrie => <StudentInfo isChanging={true}\r\n                            name={entrie[0]} value={entrie[1]}\r\n                            key={name + entrie[0]}\r\n                            changeHandler={(pole: string, value: number | boolean | string) => changeHandler(`${name}.${pole}`, value)} />)}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Changer;\r\n\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./StudentInfo.module.css\";\r\nimport { parseDate } from \"../../../../utils/date\";\r\nimport { changeHandler } from './Changer';\r\nimport Changer from './Changer';\r\n\r\ntype Props = {\r\n    name: string\r\n    value: number | string | object | boolean | Date\r\n    changeHandler: changeHandler\r\n    isChanging: boolean\r\n}\r\n\r\nexport const infos: { [key: string]: string } = {\r\n    vkId: \"ВК id\",\r\n    role: \"Роль\",\r\n    settings: \"Настройки\",\r\n    notificationsEnabled: \"Уведомления включены\",\r\n    notificationTime: \"Время напоминания\",\r\n    lastHomeworkCheck: \"Последняя проверка дз\",\r\n    className: \"Класс\"\r\n};\r\n\r\nconst convertValue = (value: string | boolean | object | Date | number) => {\r\n    if (typeof value === \"boolean\") return value ? \"Да\" : \"Нет\";\r\n    return value;\r\n};\r\n\r\nconst StudentInfo: React.FC<Props> = ({ name, value, changeHandler, isChanging }) => {\r\n    if (![\"__typename\", null, \"_id\"].includes(name)) {\r\n        const text = convertValue(value);\r\n        return (\r\n            <div className={styles.info}>\r\n                {!isChanging || name === \"vkId\" ?\r\n                    <div className={`${styles.showing}`}>\r\n                        {typeof value == \"string\" || typeof value == \"number\" || typeof value === \"boolean\"\r\n                            ? <div className={styles.value}>{infos[name] || name}: {text}</div>\r\n                            : <div className={styles.value}>\r\n                                {infos[name] || name}:\r\n                                <div className={styles.nested}>\r\n                                    {Object.entries(value).map(entrie => <StudentInfo isChanging={isChanging}\r\n                                        name={entrie[0]} value={entrie[1]}\r\n                                        key={name + entrie[0]}\r\n                                        changeHandler={(pole: string, value: number | boolean | string) => changeHandler(`${name}.${pole}`, value)} />)}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div> :\r\n                    <Changer changeHandler={changeHandler} name={name} value={value} />\r\n                }\r\n            </div>\r\n        )\r\n    } else if (name && value === null) {\r\n        return <div className={styles.info}>\r\n            {!isChanging ?\r\n                <div className={`${styles.showing}`}>\r\n                    <div className={styles.value} > {infos[name] || name}: {\"Не указано\"}</div>\r\n                </div>\r\n                : <Changer changeHandler={changeHandler} name={name} value={value} />\r\n            }\r\n        </div>\r\n    }\r\n    return <></>;\r\n}\r\n\r\nexport default StudentInfo;","import React, { useState } from \"react\";\r\nimport styles from \"./StudentPage.module.css\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { redactorOptions, Student } from \"../../../types\";\r\nimport StudentInfo from \"./StudentInfo/StudentInfo\";\r\nimport { parseDate } from \"../../../utils/date\";\r\nimport { BAN } from \"../Students/StudentPreview/StudentPreview\";\r\nimport { Redirect } from 'react-router';\r\nimport { GET_STUDENTS } from \"../Students/Students\";\r\nimport Suspender from \"../../Common/Suspender\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Options from \"../../Common/Options\";\r\nimport Confirm from \"../../Common/Confirm/Confirm\";\r\n\r\nexport const GET_STUDENT = gql`\r\n    query GetStudent($vkId: Float){\r\n        studentOne(filter: {vkId: $vkId}) {\r\n            vkId\r\n            className\r\n            role\r\n            banned\r\n            settings {\r\n                notificationsEnabled\r\n                notificationTime\r\n            }\r\n            lastHomeworkCheck\r\n            fullName\r\n            _id\r\n        }\r\n    }\r\n`;\r\nexport const GET_CLASS_LIST = gql`\r\n    {\r\n        classMany {\r\n            name\r\n        }\r\n    }\r\n`;\r\nexport const UPDATE_STUDENT = gql`\r\n    mutation UpdateStudent($record: UpdateOneStudentInput!, $vkId: Float!) {\r\n        updatedStudent: studentUpdateOne(filter: {vkId: $vkId}, record: $record) {\r\n            record {\r\n                vkId\r\n                className\r\n                role\r\n                banned\r\n                settings {\r\n                    notificationsEnabled\r\n                    notificationTime\r\n                }\r\n                lastHomeworkCheck\r\n                fullName\r\n                _id\r\n                __typename\r\n            }\r\n        }\r\n    }\r\n`\r\nexport const CHANGE_CLASS = gql`\r\n    mutation ChangeClass($vkId: Int!, $className: String!) {\r\n        changeClass(vkId: $vkId, newClassName: $className) {\r\n            __typename\r\n            vkId\r\n            _id\r\n            className\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_STUDENT = gql`\r\n    mutation DeleteStudent($vkId: Int!) {\r\n        removed: studentRemoveOne(vkId: $vkId) {\r\n            vkId\r\n        }\r\n    }\r\n`\r\n\r\nconst StudentPage: React.FC = ({}) => {\r\n    const vkId = Number(useParams<{vkId: string}>().vkId);\r\n    const [changing, setChanging] = useState(false);\r\n    const [diff, setDiff] = useState<{ [key: string]: any }>({});\r\n    const [removed, setRemoved] = useState(false);\r\n    const [waitForConfirm, setWaitForConfirm] = useState(false);\r\n\r\n    const iconSize = 30;\r\n\r\n    const { data, loading, error } = useQuery<\r\n        { studentOne: Student & { __typename: string } }\r\n    >(GET_STUDENT, { variables: { vkId } });\r\n\r\n    const [ban] = useMutation<\r\n        { banStudent: Partial<Student> & { __typename: string }, __typename: string },\r\n        { vkId: number, isBan?: boolean }>(BAN);\r\n    const [updater] = useMutation<\r\n        { updatedStudent: { record: Partial<Student> & { __typename: string }, __typename: string }, __typename: string },\r\n        { record: Partial<Student>, vkId: number }>(UPDATE_STUDENT);\r\n    const [changeClass] = useMutation<\r\n        { changeClass: Partial<Student> & { __typename: string }, __typename: string },\r\n        { vkId: number, className: string }>(CHANGE_CLASS);\r\n    const [deleter] = useMutation<\r\n        { removed: { vkId: number, __typename: string }, __typename: string },\r\n        { vkId: number }>(DELETE_STUDENT);\r\n\r\n    const banStudent = (isBan: boolean, _id: string) => {\r\n        ban({\r\n            variables: {\r\n                vkId,\r\n                isBan: isBan\r\n            },\r\n            optimisticResponse: {\r\n                __typename: \"Mutation\",\r\n                banStudent: {\r\n                    banned: isBan,\r\n                    _id,\r\n                    __typename: \"Student\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    const deleteStudent = () => {\r\n        deleter({\r\n            variables: {\r\n                vkId\r\n            },\r\n            optimisticResponse: {\r\n                __typename: \"Mutation\",\r\n                removed: {\r\n                    vkId,\r\n                    __typename: \"Student\"\r\n                }\r\n            },\r\n            update: (proxy, response) => {\r\n                const data = proxy.readQuery<{ students: Student[] }>({ query: GET_STUDENTS });\r\n\r\n                proxy.writeQuery({\r\n                    query: GET_STUDENTS,\r\n                    data: {\r\n                        students: data?.students.filter(s => s.vkId !== response?.data?.removed.vkId)\r\n                    }\r\n                });\r\n                //TODO почему появляются ошибки\r\n                setRemoved(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    const changeHandler = (path: string, value: boolean | string | number) => {\r\n        if (path.search(\".\") !== -1) {\r\n            const poles = path.split(\".\");\r\n            let t: any = diff;\r\n            for (const pole of poles.slice(0, poles.length - 1)) {\r\n                if (t[pole]) t = diff[pole];\r\n                else {\r\n                    t[pole] = {};\r\n                    t = t[pole];\r\n                }\r\n            }\r\n            t[poles[poles.length - 1]] = value;\r\n            setDiff({ ...diff });\r\n        } else {\r\n            setDiff({ ...diff, path: value });\r\n        }\r\n    };\r\n    const updateStudent = () => {\r\n        if (diff.className) {\r\n            const { className } = diff;\r\n            if (typeof className === \"string\") {\r\n                changeClass({\r\n                    variables: { className, vkId },\r\n                    optimisticResponse: {\r\n                        changeClass: { vkId, __typename: \"Student\", className: className },\r\n                        __typename: \"Mutation\"\r\n                    }\r\n                });\r\n                delete diff.className\r\n            }\r\n        }\r\n        if (diff.settings?.notificationTime) {\r\n            const [f, s] = diff.settings?.notificationTime.split(\":\").map(Number).filter(Number.isInteger);\r\n            if (f && s) {\r\n                if (!(f >= 0 && f <= 23) || !(s >= 0 && s <= 59)) {\r\n                    delete diff.settings.notificationTime;\r\n                }\r\n            } else {\r\n                delete diff.settings.notificationTime;\r\n            }\r\n        }\r\n        if (diff.lastHomeworkCheck) {\r\n            if (!Date.parse(diff.lastHomeworkCheck)) {\r\n                delete diff.lastHomeworkCheck;\r\n            }\r\n        }\r\n        if (Object.getOwnPropertyNames(diff).length) {\r\n            const settings = diff.settings;\r\n            delete diff.settings;\r\n            console.log({ ...diff, settings })\r\n            updater({\r\n                variables: { vkId, record: { ...diff, settings } },\r\n                optimisticResponse: {\r\n                    __typename: \"Mutation\",\r\n                    updatedStudent: {\r\n                        record: {\r\n                            __typename: \"Student\",\r\n                            vkId,\r\n                            ...data?.studentOne,\r\n                            ...diff,\r\n                            settings: {\r\n                                ...data?.studentOne.settings,\r\n                                ...settings\r\n                            }\r\n                        },\r\n                        __typename: \"UpdateStudent\"\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    if (removed) { return <Redirect to={`/students/`} /> };\r\n\r\n    return (\r\n        <>\r\n            <Suspender query={{ data, loading, error }}>\r\n                {(data: ({ studentOne: Student & { __typename: string } })) => {\r\n                    const { fullName, banned, __typename, _id, ...info } = data.studentOne;\r\n                    info.className = info.className;\r\n                    info.lastHomeworkCheck = info.lastHomeworkCheck === \"1970-01-01T00:00:00.000Z\" ? \"Никогда\" : parseDate(info.lastHomeworkCheck, \"YYYY.MMn.dd hh:mm\");\r\n\r\n                    return <div className={styles.student}>\r\n                        <div className={styles.header}>\r\n                            <div className={styles.info}>\r\n                                <div className={styles.name}> {fullName} </div>\r\n                            </div>\r\n                            <div className={styles.icons}>\r\n                                {changing \r\n                                    ? <Options \r\n                                        include={[redactorOptions.reject, redactorOptions.confirm]} \r\n                                        props={{\r\n                                            [redactorOptions.reject]: {\r\n                                                className: styles.icon + \" negative\",\r\n                                                onClick: () => (setDiff({}), setChanging(false)),\r\n                                            },\r\n                                            [redactorOptions.confirm]: {\r\n                                                className: styles.icon + \" positive\",\r\n                                                onClick: () => { updateStudent(); setChanging(false) },\r\n                                                allowOnlyAdmin: true,\r\n                                            }\r\n                                        }}\r\n                                        size={iconSize}\r\n                                    />\r\n                                    : <Options \r\n                                        include={[redactorOptions.change, redactorOptions.delete]}\r\n                                        props={{ \r\n                                            [redactorOptions.change]: {\r\n                                                onClick: () => setChanging(true),\r\n                                                className: `${styles.icon} ${styles.pen}`, \r\n                                                size: iconSize * 0.8\r\n                                            },\r\n                                            [redactorOptions.delete]: {\r\n                                                onClick: () => setWaitForConfirm(true),\r\n                                                className: `${styles.icon} remove`,\r\n                                            }\r\n                                        }}\r\n                                        size={iconSize}\r\n                                        withRoleControl\r\n                                        allowOnlyAdmin\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.body}>\r\n                            {Object.entries(info).map(entrie => <StudentInfo name={entrie[0]} value={entrie[1]} isChanging={changing} key={`${entrie[0]}`} changeHandler={changeHandler} />)}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                }\r\n            </Suspender>\r\n            {waitForConfirm &&\r\n                <Confirm text={`Вы уверены что хотите удалить ученика`} onConfirm={() => deleteStudent()} returnRes={() => setWaitForConfirm(false)} />\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default StudentPage;","import React, { useState, StyleHTMLAttributes } from 'react'\r\nimport { useEffect } from \"react\"\r\nimport { MdClose } from \"react-icons/md\"\r\ntype Props = {\r\n    changeHandler: (str: string) => void,\r\n    text: string\r\n}\r\n\r\nconst divStyle: React.CSSProperties = {\r\n    position: \"relative\"\r\n}\r\n\r\nconst closeStyle: React.CSSProperties = {\r\n    position: \"absolute\",\r\n    color: \"var(--main)\",\r\n    right: \"0.5rem\",\r\n    top: \"calc(50% - 15px/2)\",\r\n}\r\n\r\nconst inputStyle: React.CSSProperties = {\r\n    borderRadius: \"10px\",\r\n    height: \"100%\",\r\n    color: \"var(--main)\",\r\n    paddingLeft: \"5px\",\r\n    boxSizing: \"border-box\"\r\n}\r\n\r\nconst Searcher: React.FC<Props> = ({ changeHandler, text }) => {\r\n    return (\r\n        <div style={divStyle} onClick={e => e.stopPropagation()}>\r\n            <input style={inputStyle} type=\"text\" value={text} onChange={e => changeHandler(e.target.value)} />\r\n            <MdClose onClick={() =>changeHandler(\"\")} style={closeStyle} className={\"negative\"} size={15} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Searcher)","import React, { useState, HTMLAttributes } from 'react';\r\nimport { useEffect } from \"react\";\r\ntype Props = {\r\n    Head: React.FC<{ onClick: () => void, opened: boolean }> | JSX.Element\r\n    Body: React.FC<{ opened: boolean }> | JSX.Element\r\n    initiallyOpened?: boolean\r\n    isOpened?: boolean\r\n} & HTMLAttributes<HTMLDivElement>\r\n \r\nconst Accordion: React.FC<Props> = ({ Body, Head, children, initiallyOpened, isOpened, ...attributes }) => {\r\n    const [opened, setOpened] = useState(initiallyOpened ?? true);\r\n\r\n    useEffect(() => {\r\n        if (isOpened !== undefined) setOpened(isOpened);\r\n    }, [isOpened])\r\n\r\n    return (\r\n        <div {...attributes}>\r\n            <div className=\"accordion\">\r\n                {typeof Head === \"function\"\r\n                    ? <Head onClick={() => setOpened(!opened)} opened={opened} />\r\n                    : Head\r\n                }\r\n            </div>\r\n            {opened &&\r\n                <>{typeof Body === \"function\"\r\n                    ? <Body opened={opened} />\r\n                    : Body\r\n                }</>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Accordion)","import React, { useState } from 'react'\r\nimport styles from './InfoSection.module.css'\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport Searcher from '../../../Common/Searcher';\r\nimport ReactElement from 'react';\r\nimport Accordion from '../../../Common/Accordion';\r\nimport { GoTriangleRight } from \"react-icons/go\";\r\n\r\ntype Props = {\r\n    name: string\r\n    className?: string\r\n    updateSearchString?: (str: string) => void\r\n    children: ((str: string) => (JSX.Element | false)) | JSX.Element\r\n    Header?: React.FC<{ opened: boolean, onClick: () => void }>\r\n    defaultSearchString?: string\r\n}\r\n\r\nconst InfoSection: React.FC<Props> = ({ name, children, className = \"\", updateSearchString, Header, defaultSearchString: text = \"\" }) => {\r\n    const [opened, setOpened] = useState(true);\r\n\r\n    const onClick = () => setOpened(!opened);\r\n\r\n    return (\r\n        <div className={styles.section}>\r\n            <Accordion\r\n                isOpened={opened}\r\n                Head={\r\n                    <>{Header\r\n                        ? <Header onClick={onClick} opened={opened} />\r\n                        : <div onClick={onClick} className={styles.header}>\r\n                            <div className={styles.name}>\r\n                                <div> {name}</div>\r\n                                <GoTriangleRight className={opened ? styles.triangle_opened : \"\"} size={15} />\r\n                            </div>\r\n                            {updateSearchString &&\r\n                                <Searcher text={text} changeHandler={str => updateSearchString(str)} />\r\n                            }\r\n                        </div>\r\n                    } </>\r\n                }\r\n                Body={() => <div className={`${styles.content} ${className}`}>\r\n                    {children && typeof children === \"function\" ? children(text) : children}\r\n                </div>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(InfoSection);","import React, { useState, useEffect } from 'react'\r\nimport InfoSection from \"../../InfoSection/InfoSection\"\r\nimport Suspender from '../../../../Common/Suspender';\r\nimport StudentPreview from \"../../../Students/StudentPreview/StudentPreview\"\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { studentPreview } from '../../../Students/Students';\r\nimport { redactorOptions, roles, Student, WithTypename } from '../../../../../types';\r\nimport ReactDOM from \"react-dom\"\r\nimport useList from \"../../../../../hooks/useList\";\r\nimport styles from \"./StudentSection.module.css\";\r\nimport Options from \"../../../../Common/Options\";\r\nimport { UserContext } from \"../../../../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nconst modalEl = document.getElementById(\"chooseStudentModal\");\r\ntype Props = {\r\n    className: string\r\n}\r\n\r\nconst REMOVE_STUDENT_FROM_CLASS = gql`\r\n    mutation RemoveStudentFromClass($vkId: Int!) {\r\n        removed: removeStudentFromClass(vkId: $vkId)\r\n    }\r\n`\r\nconst GET_STUDENTS_FOR_CLASS = gql`\r\n    fragment StudentPreview on Student {\r\n        vkId\r\n        className\r\n        banned\r\n        role\r\n        fullName\r\n        _id\r\n        __typename\r\n    }\r\n    query GetStudents($className: String!){\r\n        students: studentsForClass(className: $className) {\r\n            ...StudentPreview\r\n        }\r\n    }\r\n`\r\nconst ADD_STUDENT_TO_CLASS = gql`\r\n    fragment StudentPreview on Student {\r\n        vkId\r\n        className\r\n        banned\r\n        role\r\n        fullName\r\n        _id\r\n        __typename\r\n    }\r\n    mutation AddStudentToClass($vkId: Int!, $className: String!) {\r\n        student: changeClass(vkId: $vkId, newClassName: $className) {\r\n            ...StudentPreview\r\n        }\r\n    }\r\n`\r\n\r\nconst StudentsSection: React.FC<Props> = ({ className }) => {\r\n    const { data, loading, error } = useQuery<{ students: studentPreview[] }>(GET_STUDENTS_FOR_CLASS, { variables: { className } });\r\n\r\n    const [remove] = useMutation<{ removed: boolean }, { vkId: number }>(REMOVE_STUDENT_FROM_CLASS);\r\n    const [changeClass] = useMutation<WithTypename<{ \r\n        student: WithTypename<studentPreview> \r\n    }>, { \r\n        vkId: number, \r\n        className: string \r\n    }>(ADD_STUDENT_TO_CLASS)\r\n\r\n    const [modalOpened, setModalOpened] = useState(false);\r\n    const [searchString, setSearchString] = useState(\"\");\r\n\r\n    const { items, setFilter, setItems } = useList<studentPreview>([]);\r\n    const { role } = useContext(UserContext);\r\n\r\n    const removeStudent = (vkId: number) => {\r\n        remove({\r\n            variables: { vkId: vkId },\r\n            optimisticResponse: {\r\n                removed: true\r\n            },\r\n            update: (proxy, result) => {\r\n                const data = proxy.readQuery<{ students: studentPreview[] }>({ query: GET_STUDENTS_FOR_CLASS, variables: { className } });\r\n                console.log(data, result)\r\n                if (data?.students && result.data?.removed) {\r\n                    proxy.writeQuery({\r\n                        query: GET_STUDENTS_FOR_CLASS,\r\n                        variables: { className },\r\n                        data: {\r\n                            students: data?.students.filter(e => e.vkId !== vkId)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    const addToClass = (student: studentPreview) => {\r\n        changeClass({\r\n            variables: { vkId: student.vkId, className },\r\n            optimisticResponse: {\r\n                __typename: \"Mutation\",\r\n                student: {\r\n                    __typename: \"Student\",\r\n                    ...student\r\n                }\r\n            },\r\n            update: (proxy, result) => {\r\n                const data = proxy.readQuery<{ students: studentPreview[] }>\r\n                    ({\r\n                        query: GET_STUDENTS_FOR_CLASS,\r\n                        variables: {\r\n                            className\r\n                        }\r\n                    });\r\n\r\n                if (data?.students && result.data?.student) {\r\n                    proxy.writeQuery({\r\n                        query: GET_STUDENTS_FOR_CLASS,\r\n                        variables: { className },\r\n                        data: {\r\n                            students: data.students.concat([result.data.student])\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data?.students) setItems(data?.students)\r\n    }, [data?.students])\r\n\r\n    const changeHandler = (str: string) => {\r\n        str = str.toLowerCase();\r\n        setSearchString(str);\r\n        setFilter(st => st.fullName.toLowerCase().search(str) !== -1 || st.role.toLocaleLowerCase().search(str) !== -1)\r\n    }\r\n\r\n    return (\r\n        <InfoSection name=\"Ученики\" defaultSearchString={searchString} updateSearchString={changeHandler} className={styles.studentsSection}>\r\n            <>\r\n                <Suspender query={{ data: items, loading, error }}>\r\n                    {(data: Student[]) =>\r\n                        <div className={`${styles.students}`}>\r\n                            {role === roles.contributor || role === roles.admin && \r\n                                <div className={styles.creator} onClick={() => setModalOpened(true)}> Добавить ученика </div>\r\n                            }\r\n                            {data.map(e =>\r\n                                <div className={styles.student} key={e.vkId}>\r\n                                    <StudentPreview searchText={searchString}  {...e} />\r\n                                    <Options \r\n                                        include={redactorOptions.reject}\r\n                                        props={{\r\n                                            onClick: () => removeStudent(e.vkId),\r\n                                            size: 30, \r\n                                            className: `${styles.remove} remove`,\r\n                                            allowOnlyRedactor: true\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    }\r\n                </Suspender>\r\n                {modalOpened &&\r\n                    <StudentModal className={className} styles={styles} addStudent={addToClass} closeModal={() => setModalOpened(false)} />\r\n            }</>\r\n        </InfoSection>\r\n    )\r\n}\r\n\r\nconst GET_STUDENTS_FOR_CHOOSING = gql`\r\n    fragment StudentPreview on Student {\r\n        vkId\r\n        className\r\n        role,\r\n        banned,\r\n        fullName\r\n    }\r\n    {\r\n        students: studentMany {\r\n            ...StudentPreview\r\n        }\r\n    }\r\n`\r\n\r\ntype StudentModalProps = {\r\n    closeModal: () => void,\r\n    addStudent: (student: studentPreview) => void,\r\n    styles: { [key: string]: string },\r\n    className: string\r\n}\r\n\r\n\r\nconst StudentModal: React.FC<StudentModalProps> = ({ closeModal, addStudent, styles, className }) => {\r\n    const query = useQuery<{ students: studentPreview[] }>(GET_STUDENTS_FOR_CHOOSING);\r\n\r\n    if (modalEl) {\r\n        return ReactDOM.createPortal(\r\n            <div className={\"modal\"} onClick={closeModal}>\r\n                <div className={styles.chooseStudent} onClick={e => (e.stopPropagation())}>\r\n                    <span className={styles.title}> Выберите ученика которого необходимо добавить </span>\r\n                    <Suspender query={query}>\r\n                        {(data: { students: studentPreview[] }) =>\r\n                            <div className={styles.studentsChooser}>\r\n                                <div className={styles.chooser}>\r\n                                    <span className={styles.chooser_name}>Имя</span>\r\n                                    <span className={styles.chooser_vkId}>vkId</span>\r\n                                    <span className={styles.chooser_className}>Класс</span>\r\n                                </div>\r\n                                {data.students\r\n                                    .filter((student: studentPreview) => student.className !== className)\r\n                                    .map((student: studentPreview) =>\r\n                                        <div key={student.vkId} className={styles.chooser} onClick={() => (addStudent(student), closeModal())}>\r\n                                            <span className={styles.chooser_name}>{student.fullName}</span>\r\n                                            <span className={styles.chooser_vkId}>{student.vkId}</span>\r\n                                            <span className={styles.chooser_className}>{student.className}</span>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </Suspender>\r\n                </div>\r\n            </div>,\r\n            modalEl);\r\n    }\r\n    return null;\r\n}\r\nexport default React.memo(StudentsSection)","import React, { useState, memo, ChangeEvent, useRef } from 'react'\r\nimport { gql } from 'apollo-boost';\r\nimport InfoSection from '../../InfoSection/InfoSection';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport Suspender from '../../../../Common/Suspender';\r\nimport styles from \"./ScheduleSection.module.css\";\r\nimport { MdClose, MdCheck } from \"react-icons/md\";\r\nimport { redactorOptions, WithTypename } from '../../../../../types';\r\nimport Options from \"../../../../Common/Options\";\r\n\r\nconst days = [\"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"]\r\ntype Props = {\r\n    className: string,\r\n} \r\n\r\nexport const GET_SCHEDULE = gql`\r\n    query GetSchedule($className: String!){\r\n        schedule: getSchedule(className: $className)\r\n    }\r\n`\r\nexport const GET_LESSONS = gql`\r\n    query GetLessons {\r\n        lessons: getLessons\r\n    }\r\n`\r\n\r\nconst CHANGE_SCHEDULE = gql`\r\n    mutation ChangeDay($className: String!, $dayIndex: Int!, $newDay: [String]!) {\r\n        changed: changeDay(className: $className, dayIndex: $dayIndex, newSchedule: $newDay) {\r\n            __typename\r\n            name\r\n            schedule\r\n        }\r\n    }\r\n`\r\n\r\nconst ScheduleSection: React.FC<Props> = ({ className }) => {\r\n    const scheduleQuery = useQuery<{ schedule: string[][] }>(GET_SCHEDULE, { variables: { className } });\r\n    const lessonsQuery = useQuery<{ lessons: string[] }>(GET_LESSONS);\r\n\r\n    const [changeDay] = useMutation<\r\n        WithTypename<{ changed: WithTypename<{ name: string, schedule: string[][] }> }>,\r\n        { className: string, dayIndex: number, newDay: string[] }>(CHANGE_SCHEDULE)\r\n\r\n    const changeSchedule = (changes: string[], dayIndex: number) => {\r\n        changeDay({\r\n            variables: { className, dayIndex, newDay: changes },\r\n            optimisticResponse: {\r\n                __typename: \"Mutation\",\r\n                changed: {\r\n                    __typename: \"Class\",\r\n                    name: className,\r\n                    schedule: scheduleQuery.data?.schedule.map((day, i) => i === dayIndex ? changes : day) || [[], [], [], [], [], []]\r\n                }\r\n            },\r\n            update: (proxy, data) => {\r\n                const query = proxy.readQuery<{ schedule: string[][] }>({ query: GET_SCHEDULE, variables: { className } })\r\n\r\n                if (query?.schedule) {\r\n                    proxy.writeQuery({\r\n                        query: GET_SCHEDULE,\r\n                        variables: { className },\r\n                        data: {\r\n                            schedule: scheduleQuery.data?.schedule.map((day, i) => i === dayIndex ? changes : day)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <InfoSection name={\"Расписание\"}>\r\n            <Suspender queries={[scheduleQuery, lessonsQuery]}>\r\n                {(scheduleData: ({ schedule: string[][] }), lessonsList: { lessons: string[] }) => {\r\n                    return <div className={styles.days}>\r\n                        {scheduleData.schedule.map((day, i) => <ScheduleDay changeDay={changeSchedule} lessonsList={lessonsList.lessons} key={\"day\" + i} index={i} lessons={day} />)}\r\n                    </div>\r\n                }\r\n                }\r\n            </Suspender>\r\n        </InfoSection>\r\n    )\r\n}\r\n\r\ntype ScheduleDayProps = {\r\n    index: number,\r\n    lessons: string[],\r\n    lessonsList: string[],\r\n    changeDay: (changes: string[], dayIndex: number) => void\r\n}\r\n\r\nconst ScheduleDay: React.FC<ScheduleDayProps> = memo(({ index, lessons, lessonsList, changeDay }) => {\r\n    const [changing, setChanging] = useState(false);\r\n    const [changes, setChanges] = useState(lessons);\r\n\r\n    const iconSize = 15;\r\n\r\n    const reject = () => {\r\n        setChanging(false);\r\n        setChanges(lessons);\r\n    }\r\n    const confirm = () => {\r\n        setChanging(false);\r\n        //TODO add error handling\r\n        changeDay(changes, index);\r\n    }\r\n\r\n    const changeHandler = (e: ChangeEvent<{ value: string } & Element>) => {\r\n        const index = e.target?.getAttribute(\"data-index\");\r\n        if (index != undefined) {\r\n            const t = [...changes];\r\n            t[+index] = e.target.value;\r\n            setChanges(t);\r\n        }\r\n    }\r\n\r\n    const removeLesson = (index: number) => {\r\n        setChanges(changes.filter((_, i) => i !== index));\r\n    }\r\n    const addLesson = () => {\r\n        setChanges(changes.concat([(changes[changes.length - 1] || lessonsList[0])]));\r\n    }\r\n\r\n    return <div className={styles.day} onDoubleClick={() => setChanging(true)}>\r\n        <div className={styles.lessons}>\r\n            <div className={styles.dayName} onClick={() => setChanging(true)}> {days[index]} </div>\r\n            {changes.map((lesson, i) => !changing \r\n            ? <span key={index + lesson + i} className={styles.lesson}> {i + 1})  {lesson} </span> \r\n            : <div className={styles.lessonChange} key={`picker${index + lesson + i}`}>\r\n                <select\r\n                    data-index={i} className={styles.selectLesson} name=\"lesson\"\r\n                    id={styles.pickLesson + index + lesson} onChange={changeHandler}>\r\n                    <option key={\"pick-1\"} value=\"lesson\">\r\n                        {lesson}\r\n                    </option>\r\n                    {lessonsList\r\n                        .filter(les => les !== lesson)\r\n                        .map(lesson => <option key={`pick${styles.pickLesson + index + lesson}`} value={lesson}>\r\n                            {lesson}\r\n                        </option>)}\r\n                </select>\r\n                <MdClose className={\"remove \" + styles.removeLesson} size={20} onClick={() => removeLesson(i)} />\r\n            </div>)\r\n            }\r\n            {/*//? In different element because confirm and reject should be on the bottom of component */}\r\n            {changing &&\r\n                <div className={styles.addLesson + \" \" + styles.lesson} onClick={addLesson}> Добавить урок </div>\r\n            }\r\n        </div>\r\n        {!changing \r\n            ? <Options \r\n                include={redactorOptions.change}\r\n                props={{\r\n                    className: styles.pen, \r\n                    size: iconSize, \r\n                    onClick: () => setChanging(true),\r\n                    allowOnlyRedactor: true,\r\n                }}\r\n            />\r\n            : <div className={styles.changers}>\r\n                <Options \r\n                    include={[redactorOptions.reject, redactorOptions.confirm]}\r\n                    props={{\r\n                        [redactorOptions.reject]: {\r\n                            onClick: reject,\r\n                            className: `remove ${styles.changer}`, \r\n                        },\r\n                        [redactorOptions.confirm]: {\r\n                            onClick: confirm,\r\n                            className: `confirm ${styles.changer}`, \r\n                            allowOnlyRedactor: true\r\n                        }\r\n                    }}\r\n                    size={iconSize + 5}\r\n                />\r\n            </div>\r\n        }\r\n    </div>\r\n})\r\n\r\nexport default ScheduleSection;","import React, { ImgHTMLAttributes, useState, CSSProperties, HTMLAttributes } from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport { MdNavigateBefore, MdNavigateNext } from \"react-icons/md\";\r\nimport styles from \"./OpenableImage.module.css\";\r\n\r\nexport type OpenableImgProps = {\r\n    prevImg?: OpenableImgProps\r\n    nextImg?: OpenableImgProps\r\n    src: string\r\n} & ImgHTMLAttributes<HTMLImageElement>;\r\ntype ModalImgProps = {\r\n    close: () => void\r\n} & OpenableImgProps\r\ntype changeImg = (img: { src: string, prevImg?: OpenableImgProps, nextImg?: OpenableImgProps }, e: React.MouseEvent<SVGElement, MouseEvent>) => void;\r\n\r\nconst OpenableImg: React.FC<OpenableImgProps> = ({ prevImg, nextImg, ...props }) => {\r\n    const [modalOpened, setModalOpened] = useState(false);\r\n\r\n    const photoModal = document.getElementById(\"photoModal\");\r\n\r\n    return (\r\n        <>\r\n            <img {...props} onClick={() => setModalOpened(true)} />\r\n            {modalOpened && photoModal &&\r\n                ReactDOM.createPortal(<ModalImg close={() => setModalOpened(false)} {...{ ...props, prevImg, nextImg }} />, photoModal)\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport const ImgStab: React.FC<OpenableImgProps & { Stab: React.FC<HTMLAttributes<HTMLDivElement> & { onClick: () => void }> }> = ({ Stab, ...props }) => {\r\n    const [modalOpened, setModalOpened] = useState(false);\r\n\r\n    const photoModal = document.getElementById(\"photoModal\");\r\n\r\n    return (\r\n        <>\r\n            <Stab onClick={() => setModalOpened(true)} />\r\n            {modalOpened && photoModal &&\r\n                ReactDOM.createPortal(<ModalImg close={() => setModalOpened(false)} {...props} />, photoModal)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ModalImg: React.FC<ModalImgProps> = ({ close, nextImg, prevImg, ...props }) => {\r\n    const [src, setSrc] = useState(props.src);\r\n    const [prev, setPrev] = useState(prevImg);\r\n    const [next, setNext] = useState(nextImg);\r\n\r\n    const toImg: changeImg = ({ src, prevImg, nextImg }, e) => {\r\n        e.stopPropagation()\r\n        setSrc(src);\r\n        setPrev(prevImg);\r\n        setNext(nextImg);\r\n    }\r\n\r\n    return <div className=\"modal\" onMouseDown={close}>\r\n        {prev &&\r\n            <MdNavigateBefore data-testid=\"prevImg\" size={40} className={styles.prev} onMouseDown={(e) => toImg(prev, e)} />\r\n        }\r\n        <img style={{ width: \"100%\", maxWidth: \"80vh\" }} {...props} src={src} onMouseDown={e => e.stopPropagation()} />\r\n        {next &&\r\n            <MdNavigateNext data-testid=\"nextImg\" size={40} className={styles.next} onMouseDown={(e) => toImg(next, e)} />\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default OpenableImg;\r\n","import React from 'react'\r\nimport { attachment } from \"../../../types\";\r\nimport OpenableImg, { OpenableImgProps, ImgStab } from \"./OpenableImage\";\r\nimport styles from \"./OpenableImage.module.css\";\r\ntype Props = {\r\n  images: (attachment & React.ImgHTMLAttributes<HTMLImageElement>)[]\r\n  Stab?: React.FC<React.HTMLAttributes<HTMLDivElement> & { onClick: () => void }> \r\n}\r\n\r\nexport interface Image {\r\n    url: string\r\n    _id?: string\r\n    \r\n}\r\n\r\nexport const connectImages: (atts: Image[]) => (OpenableImgProps & {_id: string})[] = (attachments) => {\r\n    const parsedAttachments: (OpenableImgProps & {_id: string})[] = [];\r\n\r\n    for (let i = 0; i < attachments.length; i++) {\r\n        const attachment = {...attachments[i]};\r\n        const newImgProps: (OpenableImgProps & {_id: string}) = {} as (OpenableImgProps & {_id: string});\r\n        newImgProps.src = attachment.url;\r\n        newImgProps._id = attachment._id || i.toString();\r\n        \r\n        const {url, _id, ...rest} = attachment;\r\n\r\n        Object.assign(newImgProps, rest);\r\n        parsedAttachments.push(newImgProps);\r\n    }\r\n    if (parsedAttachments.length > 1) {\r\n        for (let i = 0; i < parsedAttachments.length; i++) {\r\n            if (i + 1 < parsedAttachments.length) {\r\n                parsedAttachments[i].nextImg = parsedAttachments[i + 1];\r\n            } else {\r\n                parsedAttachments[i].nextImg = parsedAttachments[0];\r\n            }\r\n            if (i - 1 >= 0) {\r\n                parsedAttachments[i].prevImg = parsedAttachments[i - 1];\r\n            } else {\r\n                parsedAttachments[i].prevImg = parsedAttachments[parsedAttachments.length - 1];\r\n            }\r\n        }\r\n    }\r\n    return parsedAttachments;\r\n}\r\n\r\nconst ImgAlbum: React.FC<Props> = ({images, Stab}) => {\r\n    const parsedImages = connectImages(images);\r\n    \r\n    return (\r\n        <>{Stab \r\n            ? <ImgStab\r\n                {...parsedImages[0]}\r\n                Stab={Stab} />\r\n            : <>{\r\n                parsedImages.map(\r\n                    (at) => <OpenableImg key={at._id} className={styles.attach} alt=\"Фото дз\" {...at} />\r\n                )}\r\n            </>\r\n        }</>\r\n    )\r\n}\r\n\r\nexport default ImgAlbum;","import React, { useState } from 'react';\r\nimport Options from \"../../components/Common/Options\";\r\nimport { redactorOptions } from \"../../types\";\r\n\r\nimport styles from \"./ContentChanger.module.css\";\r\n\r\nexport type ContentSectionProps<T> = {\r\n    title?: string,\r\n    Header?: JSX.Element | React.ComponentType<{changeHandler: (value: T) => void, value: T}> \r\n    ContentComponent: React.ComponentType<{changeHandler: (value: T) => void, value: T}>,\r\n    defaultValue?: T\r\n}\r\nexport type contentType<T extends ContentSectionProps<any>> = T extends ContentSectionProps<infer P> ? P : never;\r\nexport type stateType<T extends {[K: string]: ContentSectionProps<any>}> = {\r\n    [K in keyof T]: contentType<T[K]>\r\n};\r\n\r\nexport type ContentChangerProps<T extends {[key: string]: any}> = {\r\n    reject: () => void\r\n    confirm: (value: T) => void\r\n    onChange?: (value: T, changed: string) => void\r\n    initState?: Partial<T>\r\n    sectionClassName?: string\r\n    titleClassName?: string\r\n}\r\n\r\nconst createContentFiller = \r\n    <T extends {[K: string]: ContentSectionProps<any>}>\r\n    (contentFillers: T): React.ComponentType<ContentChangerProps<stateType<T>>> => \r\n{    \r\n    return ({\r\n        reject, confirm, onChange, initState = {} as Partial<stateType<T>>,\r\n        sectionClassName, titleClassName, \r\n    }) => {\r\n        const stateFromDefaults: stateType<T> = Object.entries(contentFillers).reduce((acc, [key, c]) => ({...acc, [key]: c}), {} as stateType<T>);\r\n        const [state, setState] = useState<stateType<T>>({...stateFromDefaults, initState});\r\n\r\n        return (\r\n            <div className={styles.contentChanger} onMouseDown={e => e.stopPropagation()}>\r\n                <div className={styles.header}>\r\n                    <Options\r\n                        include={[redactorOptions.reject, redactorOptions.confirm]}\r\n                        props={{\r\n                            [redactorOptions.confirm]: {\r\n                                onClick: () => confirm(state),\r\n                                className: \"positive\",\r\n                                allowOnlyRedactor: true\r\n                            },\r\n                            [redactorOptions.reject]: {\r\n                                onClick: reject,\r\n                                className: \"negative\"\r\n                            }\r\n                        }}\r\n                        style={{cursor: \"pointer\"}}\r\n                        size={25}\r\n                    />\r\n                </div>\r\n                {Object.entries(contentFillers).map(([stateKey, {title, ContentComponent, Header}]) => (\r\n                    <section className={`${styles.section} ${sectionClassName || \"\"}`} key={stateKey}>\r\n                        {Header \r\n                            ? <>{typeof Header === \"function\"\r\n                                ? <Header \r\n                                    changeHandler={(value) => {\r\n                                        setState({...state, [stateKey]: value});\r\n                                        onChange?.({...state, [stateKey]: value}, stateKey);\r\n                                    }} \r\n                                    value={state[stateKey]}\r\n                                />\r\n                                : {Header}\r\n                            }</>\r\n                            : <>{title || \"\"}</>\r\n                        }\r\n                        <h1 className={`${styles.title} ${titleClassName || \"\"}`}> {title} </h1>\r\n                        <ContentComponent \r\n                            changeHandler={(value) => {\r\n                                setState({...state, [stateKey]: value});\r\n                                onChange?.({...state, [stateKey]: value}, stateKey);\r\n                            }} \r\n                            value={state[stateKey]}\r\n                        />\r\n                    </section>\r\n                ))}\r\n            </div> \r\n        )}\r\n}\r\n\r\nexport default createContentFiller;","import React, { CSSProperties, ChangeEvent } from 'react'\r\ntype Props = {\r\n    View: React.FC<{}>,\r\n    style?: CSSProperties,\r\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst FileUploader: React.FC<Props> = ({ View, style, onChange }) => {\r\n    return (\r\n        <label style={style || {}}>\r\n            <View />\r\n            <input\r\n                type=\"file\"\r\n                onChange={(e) => (onChange(e), e.target.value = \"\")} multiple\r\n                style={{ outline: 0, opacity: 0, pointerEvents: \"none\", userSelect: \"none\", display: \"none\" }} />\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default FileUploader","import React from 'react'\r\nimport styles from \"./OpenableImage.module.css\"\r\nimport { MdClose } from \"react-icons/md\"\r\nimport OpenableImg from \"./OpenableImage\"\r\ntype Props = {\r\n  attachment: string, \r\n  remove: () => void \r\n}\r\n\r\nconst DeletableAttachment: React.FC<Props> = ({ attachment, remove }) => {\r\n    return (\r\n        <div className={styles.deletableAttachment}>\r\n            <OpenableImg src={attachment} alt=\"вложение\" />\r\n            <MdClose size={20} onClick={remove} className={styles.removeAttachment + \" negative\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeletableAttachment;","import React, { ChangeEvent } from 'react'\r\nimport { MdFileUpload } from \"react-icons/md\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { content, attachment, WithTypename, vkPhoto } from '../../../types';\r\n\r\nimport styles from './ChangeContent.module.css'\r\nimport FileUploader from \"../FileUploader\";\r\nimport DeletableAttachment from \"../OpenableImage/DeletableAttachment\";\r\nimport createContentFiller, { ContentSectionProps } from \"../../../utils/createContentChanger/createContentChanger\";\r\n\r\nconst parseAttachment = (photo: vkPhoto) => {\r\n    return `photo${photo.owner_id}_${photo.id}`;\r\n};\r\nconst findMaxPhotoResolution = (photo: vkPhoto) => \r\n    photo.sizes.reduce<\r\n        { url: string, height: number }\r\n    >((acc, c) => \r\n        (c.height > acc.height) ? c : acc, \r\n        { height: 0, url: \"\" }\r\n    ).url;\r\n\r\ntype changableContent = Pick<content, \"to\" | \"attachments\" | \"text\">\r\ntype ChangeContentPropsType = {\r\n    [K in keyof changableContent]: ContentSectionProps<changableContent[K]>\r\n}\r\n\r\nexport const ChangeContentProps: ChangeContentPropsType = {\r\n    to: {\r\n        title: \"Дата\",\r\n        ContentComponent: ({ changeHandler, value }) => <DatePicker\r\n            selected={new Date(value)}\r\n            onChange={date => {\r\n                if (date !== null) {\r\n                    changeHandler(date.toISOString());\r\n                }\r\n            } }\r\n            minDate={new Date()}\r\n            dateFormat={\"dd/MM/yyyy\"}\r\n            className={styles.datePickerInput}\r\n            showPopperArrow={false}\r\n            calendarClassName={styles.datePickerCalendar} />,\r\n        defaultValue: new Date().toISOString(),\r\n    },\r\n    attachments: {\r\n        Header: ({ changeHandler, value }) => {\r\n            const onPhotoUpload = async (e: ChangeEvent<HTMLInputElement>) => {\r\n                try {\r\n                    const files = e.target.files;\r\n                    if (files) {\r\n                        const fd = new FormData();\r\n                        for (let i = 0; i < files.length; i++) {\r\n                            fd.append(\"newAttachment\", files[i]);\r\n                        }\r\n\r\n                        const { photos }: { photos: vkPhoto[]; } = await fetch(\r\n                            document.location.hostname === \"localhost\"\r\n                                ? \"http://localhost:8080/saveAttachment\"\r\n                                : document.location.origin.endsWith(\"/\")\r\n                                    ? document.location.origin + `saveAttachment`\r\n                                    : document.location.origin + `/saveAttachment`,\r\n                            {\r\n                                method: \"POST\",\r\n                                body: fd,\r\n                                headers: {\r\n                                    \"accepts\": \"application/json\"\r\n                                }\r\n                            }\r\n                        ).then(res => res.json());\r\n\r\n                        const newAttachments: WithTypename<attachment>[] = photos.map((photo, i) => ({\r\n                            url: findMaxPhotoResolution(photo),\r\n                            value: parseAttachment(photo),\r\n                            _id: i + Date.now().toString(),\r\n                            __typename: \"ClassHomeworkAttachment\"\r\n                        }));\r\n\r\n                        changeHandler([\r\n                            ...value,\r\n                            ...newAttachments\r\n                        ]);\r\n                    }\r\n                } catch (e) {\r\n                    console.error(e);\r\n                }\r\n            };\r\n\r\n            return <div className={styles.header}>\r\n                <h1 className={styles.title}> Вложения </h1>\r\n                <FileUploader View={() => <MdFileUpload size={25} className={styles.uploaderIcon} />} onChange={onPhotoUpload} />\r\n            </div>;\r\n        },\r\n        ContentComponent: ({ value, changeHandler }) => {\r\n            return <div className={styles.attachmentsContainer}>\r\n                {value.map((att: attachment) => <DeletableAttachment\r\n                    key={att._id}\r\n                    attachment={att.url}\r\n                    remove={() => {\r\n                        changeHandler(value.filter(({ _id }) => _id !== att._id));\r\n                    } } />\r\n                )}\r\n            </div>;\r\n        },\r\n        defaultValue: []\r\n    },\r\n    text: {\r\n        title: \"Домашняя работа\",\r\n        ContentComponent: ({ value, changeHandler }) => {\r\n            return (\r\n                <textarea\r\n                    autoFocus\r\n                    name=\"text\" value={value}\r\n                    className={styles.text}\r\n                    onChange={e => {\r\n                        changeHandler(e.target.value);\r\n                    } }\r\n                    cols={60} rows={5}\r\n                >\r\n                    {value}\r\n                </textarea>\r\n            );\r\n        },\r\n        defaultValue: \"\"\r\n    }\r\n};\r\nconst ChangeContent = createContentFiller<ChangeContentPropsType>(ChangeContentProps)\r\n\r\nexport default ChangeContent;\r\n\r\n","import React from 'react'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { homework } from '../../../types';\r\n\r\nimport styles from './ChangeContent.module.css'\r\nimport createContentFiller, { ContentSectionProps } from \"../../../utils/createContentChanger/createContentChanger\";\r\nimport Suspender from \"../Suspender\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_SCHEDULE, GET_LESSONS } from \"../../Content/ClassPage/Sections/ScheduleSection/ScheduleSection\";\r\nimport { ChangeContentProps } from \"./ChangeContent\";\r\nimport { useParams } from \"react-router-dom\";\r\n \r\ntype changableHomework = Pick<homework, \"lesson\" | \"to\" | \"attachments\" | \"text\">\r\ntype ChangeHomeworkProps = {\r\n    [K in keyof changableHomework]: ContentSectionProps<changableHomework[K]>\r\n}\r\n\r\nconst ChangeHomework = createContentFiller<ChangeHomeworkProps>({\r\n    lesson: {\r\n        title: \"Урок\",\r\n        ContentComponent: ({value, changeHandler}) => {\r\n            const {className} = useParams<{className: string}>();\r\n            const scheduleQuery = useQuery<{ schedule: string[][] }>(GET_SCHEDULE, { variables: { className } });\r\n            const lessonsQuery = useQuery<{ lessons: string[] }>(GET_LESSONS);\r\n\r\n            return (\r\n                <Suspender queries={[scheduleQuery, lessonsQuery]}>\r\n                    {({ schedule }: ({ schedule: string[][] }), { lessons }: { lessons: string[] }) => {\r\n                        const possibleLessons = lessons.filter(lesson => schedule.some(day => day.includes(lesson)));\r\n                        \r\n                        return <select\r\n                            className={styles.selectLesson}\r\n                            onChange={e => changeHandler(e.target.value)}\r\n                            value={value}\r\n                        >\r\n                            {!value &&\r\n                                <option key={`possibleLessonNothing`} value={\"\"}>\r\n                                    Выберите предмет \r\n                                </option>\r\n                            }\r\n                            {possibleLessons\r\n                                .map((lesson, i) => <option key={`possibleLesson${lesson}`} value={lesson}>\r\n                                    {lesson}\r\n                                </option>)\r\n                            }\r\n                        </select>\r\n                    }}\r\n                </Suspender>\r\n            )\r\n        }\r\n    },\r\n    ...ChangeContentProps\r\n})\r\n\r\nexport default ChangeHomework;\r\n\r\n","import React, { useState } from 'react'\r\nimport styles from '../Common/ContentSection.module.css'\r\nimport InfoSection from '../../InfoSection/InfoSection';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { content, attachment, WithTypename, homework, redactorOptions } from '../../../../../types';\r\nimport Suspender from '../../../../Common/Suspender';\r\nimport Accordion from \"../../../../Common/Accordion\";\r\nimport { GoTriangleRight } from \"react-icons/go\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ChangeContent from \"../../../../Common/ChangeContent/ChangeContent\";\r\nimport { GET_SCHEDULE, GET_LESSONS } from \"../ScheduleSection/ScheduleSection\";\r\nimport ImgAlbum from \"../../../../Common/OpenableImage/ImgAlbum\";\r\nimport { parseContentByDate, objectForEach, getDateStrFromDayMonthStr } from \"../../../../../utils/functions\";\r\nimport Options from \"../../../../Common/Options\";\r\nimport ChangeHomework from \"../../../../Common/ChangeContent/ChangeHomework\";\r\n\r\nconst changeContentModalRoot = document.getElementById('changeContentModal');\r\n\r\ntype Props = {\r\n    className: string\r\n}\r\ntype taskProps = {\r\n    homework: homework\r\n    removeHomework: (homeworkId: string | undefined) => void,\r\n    updateHomework: (homeworkId: string | undefined, updates: Partial<homework>) => void\r\n}\r\n\r\nconst GET_HOMEWORK = gql`\r\n    query GetHomework($className: String!) {\r\n        homework: getHomework(className: $className) {\r\n            text\r\n            createdBy\r\n            to\r\n            attachments {\r\n                url\r\n                value\r\n                _id\r\n            }\r\n            lesson\r\n            _id\r\n            __typename\r\n        }\r\n    }\r\n`\r\n\r\nconst REMOVE_TASK = gql`\r\n    mutation RemoveTask($className: String!, $homeworkId: String!) {\r\n        removeHomework(homeworkId: $homeworkId, className: $className)\r\n    }\r\n`\r\n\r\nconst CHANGE_HOMEWORK = gql`\r\n    mutation ChangeHomework($className: String!, $homeworkId: String!, $updates: ClassHomeworkInput!) {\r\n        updateHomework(className: $className, homeworkId: $homeworkId, updates: $updates) {\r\n            _id \r\n            text\r\n            attachments { \r\n                url \r\n                value\r\n                _id\r\n            }\r\n            to\r\n            lesson\r\n        }\r\n    }\r\n`\r\n\r\nconst ADD_HOMEWORK = gql`\r\n    mutation addHomework($className: String!, $text: String!, $to: String, $lesson: String!, $attachments: [ClassHomeworkAttachmentsInput]!) {\r\n        addHomework(className: $className, text: $text, to: $to, lesson: $lesson, attachments: $attachments) {\r\n            __typename\r\n            text\r\n            _id\r\n            lesson\r\n            to\r\n            attachments {\r\n                url\r\n                value\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst REMOVE_OLD_HOMEWORK = gql`\r\n    mutation RemoveOldHomework($className: String!) {\r\n        removeOldHomework(className: $className) {\r\n            to\r\n            text\r\n            attachments {\r\n                url\r\n                value\r\n                _id\r\n            }\r\n            lesson\r\n            _id\r\n            createdBy\r\n        }\r\n    }\r\n`\r\n\r\nconst HomeworkSection: React.FC<Props> = ({ className }) => {\r\n    const [homeworkCreating, setHomeworkCreating] = useState(false);\r\n    const [initContent, setInitContent] = useState({});\r\n    const homeworkQuery = useQuery<{ homework: homework[] }, {className: string}>(GET_HOMEWORK, { variables: { className } });\r\n\r\n    const [removeHomework] = useMutation<\r\n        WithTypename<{\r\n            removeHomework: string\r\n        }>,\r\n        {\r\n            className: string,\r\n            homeworkId: string,\r\n        }\r\n    >(REMOVE_TASK);\r\n    const [updateHomework] = useMutation<\r\n        WithTypename<{\r\n            updateHomework: WithTypename<Partial<homework>>\r\n        }>,\r\n        {\r\n            className: string,\r\n            homeworkId: string,\r\n            updates: Partial<Omit<homework, \"attachments\"> & { attachments: attachment[] }>\r\n        }>(CHANGE_HOMEWORK);\r\n\r\n    const [addHomework] = useMutation<\r\n        WithTypename<{\r\n            addHomework: WithTypename<homework>\r\n        }>,\r\n        {\r\n            className: string,\r\n            text: string,\r\n            lesson: string,\r\n            attachments: attachment[]\r\n            to: string\r\n        }\r\n    >(ADD_HOMEWORK)\r\n    const [removeOldHomework] = useMutation<\r\n        {removeOldHomework: homework[]},\r\n        {className: string}\r\n    >(REMOVE_OLD_HOMEWORK, {\r\n        variables: { className },\r\n        optimisticResponse: {\r\n            removeOldHomework: homeworkQuery.data?.homework.filter(({to}) => Date.now() - Date.parse(to) <= 24 * 60 * 60 * 1000) || []\r\n        },\r\n        update: (proxy, mutation) => {\r\n            if (mutation && mutation.data?.removeOldHomework) {\r\n                proxy.writeQuery({\r\n                    query: GET_HOMEWORK,\r\n                    variables: { className },\r\n                    data: {\r\n                        homework: mutation.data.removeOldHomework}\r\n                })\r\n            }\r\n        }\r\n    } );\r\n\r\n    const remove = (homeworkId: string | undefined) => {\r\n        if (homeworkId) {\r\n            removeHomework({\r\n                variables: { className, homeworkId },\r\n                optimisticResponse: {\r\n                    __typename: \"Mutation\",\r\n                    removeHomework: homeworkId\r\n                },\r\n                update: (proxy, res) => {\r\n                    const data = proxy.readQuery<{ homework: homework[] }>({ query: GET_HOMEWORK, variables: { className } });\r\n\r\n                    if (res?.data) {\r\n                        proxy.writeQuery({\r\n                            query: GET_HOMEWORK,\r\n                            variables: { className },\r\n                            data: {\r\n                                homework: data?.homework.filter(hw => hw._id !== homeworkId) || []\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const update = (homeworkId: string | undefined, updates: Partial<WithTypename<homework>>) => {\r\n        const {__typename, ...updatesWithoutTypename} = updates; \r\n\r\n        if (homeworkId) {\r\n            updateHomework({\r\n                variables: { className, homeworkId, updates: { ...updatesWithoutTypename, attachments: updates.attachments?.map(({ __typename, ...att }) => att) } },\r\n                optimisticResponse: {\r\n                    __typename: \"Mutation\",\r\n                    updateHomework: {\r\n                        __typename: \"ClassHomework\",\r\n                        _id: homeworkId,\r\n                        ...homeworkQuery?.data?.homework.find(hw => hw._id === homeworkId),\r\n                        ...updates\r\n                    }\r\n                },\r\n                update: (proxy, res) => {\r\n                    const data = proxy.readQuery<{ homework: homework[] }>({ query: GET_HOMEWORK, variables: { className } });\r\n\r\n                    if (res?.data) {\r\n                        proxy.writeQuery({\r\n                            query: GET_HOMEWORK,\r\n                            variables: { className },\r\n                            data: {\r\n                                homework: data?.homework.map(hw => hw._id === homeworkId ? res.data?.updateHomework : hw) || []\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const add = (homeworkData: Omit<homework, \"_id\">) => {\r\n        addHomework({\r\n            variables: { ...homeworkData, className, attachments: homeworkData.attachments.map(({ __typename, ...att }) => att) },\r\n            optimisticResponse: {\r\n                __typename: \"Mutation\",\r\n                addHomework: {\r\n                    ...homeworkData,\r\n                    _id: Date.now().toString(),\r\n                    __typename: \"ClassHomework\"\r\n                }\r\n            },\r\n            refetchQueries: [{\r\n                query: GET_HOMEWORK,\r\n                variables: { className }\r\n            }]\r\n        })\r\n        setInitContent({});\r\n    }\r\n \r\n    return ( \r\n        <>\r\n            <InfoSection\r\n                name='Домашняя работа'\r\n                Header={({ opened, onClick }) =>\r\n                    <div className={`${styles.sectionHeader} ${styles.contentHeader}`} onClick={onClick}>\r\n                        <div className={styles.title}>\r\n                            Домашняя работа \r\n                            <GoTriangleRight className={opened ? styles.triangle_opened : \"\"} size={15} />\r\n                        </div>\r\n                        <Add onClick={(e) => (\r\n                                    e.stopPropagation(), \r\n                                    setHomeworkCreating(true)\r\n                        )} />\r\n                    </div>\r\n                }\r\n            >\r\n                <Suspender query={homeworkQuery}>\r\n                    {(data: { homework: homework[] }) => {\r\n                        const [oldHw, newHw] = parseContentByDate(data.homework);\r\n                        const parsedHw = objectForEach(newHw, parseHomeworkByLesson);\r\n                        const parsedOldHw = objectForEach(oldHw, parseHomeworkByLesson);\r\n                        return <div className={styles.content}>\r\n                            {Object.keys(parsedOldHw).length > 0 &&\r\n                                <Accordion\r\n                                    initiallyOpened={false}\r\n                                    Head={({ opened, onClick }) =>\r\n                                        <div className={styles.oldContentHeader}>\r\n                                            <p className={`${styles.date} ${styles.accordion}`} onClick={onClick}>\r\n                                                    Старое дз\r\n                                                    <GoTriangleRight size={15} className={opened ? styles.triangle_opened : \"\"} />\r\n                                            </p>\r\n\r\n                                            <Options \r\n                                                include={redactorOptions.delete}\r\n                                                props={{\r\n                                                    allowOnlyRedactor: true,\r\n                                                    className: `remove ${styles.removeOldContent}`,\r\n                                                    size: 20,\r\n                                                    onClick: () => removeOldHomework()\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    } \r\n                                    Body={() =>\r\n                                        <>{Object.keys(parsedOldHw).map(hwDate => \r\n                                        <Accordion\r\n                                            initiallyOpened={false}\r\n                                            className={styles.offseted}\r\n                                            key={hwDate} \r\n                                            Head={({ onClick, opened }) =>\r\n                                                <p className={`${styles.date} ${styles.accordion}`} onClick={onClick}>\r\n                                                    {hwDate}\r\n                                                    <GoTriangleRight size={15} className={opened ? styles.triangle_opened : \"\"} />\r\n                                                </p>}\r\n                                            Body={() =>\r\n                                                <>\r\n                                                    {Object.keys(parsedOldHw[hwDate]).map(lesson =>\r\n                                                        <Accordion\r\n                                                            className={styles.offseted} key={hwDate + lesson}\r\n                                                            Head={({ onClick, opened }) =>\r\n                                                                <p className={`${styles.lesson} ${styles.accordion}`} onClick={onClick}>\r\n                                                                    {lesson}\r\n                                                                    <GoTriangleRight\r\n                                                                        className={opened ? styles.triangle_opened : \"\"} size={10} />\r\n                                                                </p>}\r\n                                                            Body={() =>\r\n                                                                <div className={`${styles.elements} ${styles.offseted}`}>\r\n                                                                    {parsedOldHw[hwDate][lesson].map((hw, i) => \r\n                                                                        <Task updateHomework={update} key={hw._id} removeHomework={remove} homework={hw} />)\r\n                                                                    }\r\n                                                                </div>\r\n                                                            }\r\n                                                        />\r\n                                                    )}\r\n                                                </>\r\n                                            }\r\n                                        />\r\n                                    )}</>\r\n                                    }\r\n                                />\r\n                            }\r\n                            {Object.keys(parsedHw).map(hwDate => \r\n                                <Accordion\r\n                                    key={hwDate}\r\n                                    Head={({ onClick, opened }) =>\r\n                                        <div className={styles.sectionHeader} onClick={onClick}>\r\n                                            <div className={`${styles.date} ${styles.accordion}`}>\r\n                                                {hwDate}\r\n                                                <GoTriangleRight className={opened ? styles.triangle_opened : \"\"} size={15} />\r\n                                            </div>\r\n                                            <Add onClick={(e) => (\r\n                                                e.stopPropagation(), \r\n                                                setHomeworkCreating(true), \r\n                                                setInitContent({to: getDateStrFromDayMonthStr(hwDate)}) \r\n                                            )} />\r\n                                        </div>\r\n                                    }\r\n                                    Body={() =>\r\n                                        <>\r\n                                            {Object.keys(parsedHw[hwDate]).map(lesson =>\r\n                                                <Accordion\r\n                                                    className={styles.offseted} key={hwDate + lesson}\r\n                                                    Head={({ onClick, opened }) =>\r\n                                                        <div className={styles.sectionHeader} onClick={onClick}>\r\n                                                            <div className={`${styles.lesson} ${styles.accordion}`}>\r\n                                                                {lesson}\r\n                                                                <GoTriangleRight className={opened ? styles.triangle_opened : \"\"} size={15} />\r\n                                                            </div>\r\n                                                            <Add onClick={(e) => (\r\n                                                                e.stopPropagation(), \r\n                                                                setHomeworkCreating(true), \r\n                                                                setInitContent({to: getDateStrFromDayMonthStr(hwDate), lesson})\r\n                                                            )} />\r\n                                                        </div>\r\n                                                    }\r\n                                                    Body={() =>\r\n                                                        <div className={`${styles.elements} ${styles.offseted}`}>\r\n                                                            {parsedHw[hwDate][lesson].map((hw, i) => <Task updateHomework={update} key={hw._id} removeHomework={remove} homework={hw} />)}\r\n                                                        </div>\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    }\r\n                    }\r\n                </Suspender>\r\n            </InfoSection>\r\n            {changeContentModalRoot && homeworkCreating &&\r\n                ReactDOM.createPortal(\r\n                    <CreateHomeworkModal\r\n                        returnHomework={add}\r\n                        close={() => (setHomeworkCreating(false), setInitContent({}))}\r\n                        initContent={initContent}\r\n                    />,\r\n                    changeContentModalRoot\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Task: React.FC<taskProps> = ({ homework, removeHomework, updateHomework }) => {\r\n    const [changing, setChanging] = useState(false);\r\n\r\n    return (\r\n        <div className={`${styles.container} ${homework.attachments.length === 2 ? styles.pair : \"\"}`} onDoubleClick={() => setChanging(true)}>\r\n            <div key={homework._id}\r\n                className={styles.element}>\r\n                {homework.attachments.length > 0 &&\r\n                    <> {homework.attachments.length <= 2\r\n                        ? <div className={styles.attachments}>\r\n                            <ImgAlbum images={homework.attachments} />\r\n                        </div>\r\n                        : <ImgAlbum images={homework.attachments} \r\n                            Stab={({ onClick }) => (\r\n                                <div className={styles.stab} onClick={onClick}>\r\n                                    <span>{homework.attachments.length}</span>\r\n                                    <span> Photos </span>\r\n                                </div>\r\n                            )}/>\r\n                    } </>\r\n                }\r\n                {homework.text &&\r\n                    <p className={styles.text}> {homework.text} </p>\r\n                }\r\n                {changing && changeContentModalRoot &&\r\n                    ReactDOM.createPortal(\r\n                        <div className=\"modal\" onMouseDown={() => setChanging(false)}>\r\n                            <ChangeHomework\r\n                                initState={homework}\r\n                                confirm={(newHomework) => (updateHomework(homework._id, newHomework), setChanging(false))}\r\n                                reject={() => setChanging(false)}\r\n                            />\r\n                        </div>,\r\n                        changeContentModalRoot)\r\n                }\r\n            </div>\r\n            <div className={styles.controls}>\r\n                <Options \r\n                    include={[redactorOptions.change, redactorOptions.delete]}\r\n                    props={{ \r\n                        [redactorOptions.change]: {\r\n                            onClick: () => setChanging(true),\r\n                            className: `${styles.pen}`, \r\n                            size: 15,\r\n                        },\r\n                        [redactorOptions.delete]: {\r\n                            onClick: () => removeHomework(homework._id),\r\n                            className: `${styles.remove}`, \r\n                            size: 20,\r\n                        }\r\n                    }}\r\n                    withRoleControl\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype CreateHomeworkModalProps = { \r\n    returnHomework: (hw: Omit<homework, \"_id\">) => void, \r\n    close: () => void, \r\n    initContent?: Partial<homework> \r\n}\r\nconst CreateHomeworkModal: React.FC<CreateHomeworkModalProps> = ({ returnHomework, close, initContent = {} }) => {\r\n    if (changeContentModalRoot) {\r\n        return ReactDOM.createPortal(\r\n            <div className={\"modal\"} onMouseDown={close}>\r\n                <ChangeHomework\r\n                    initState={initContent}\r\n                    confirm={(homework) => (returnHomework(homework), close())}\r\n                    reject={close}\r\n                />\r\n            </div>\r\n            , changeContentModalRoot)\r\n    }\r\n    return null;\r\n}\r\n\r\nconst Add: React.FC<{onClick: (e: React.MouseEvent<SVGElement, MouseEvent>) => void}> = ({onClick}) => {\r\n    return <Options \r\n        include={redactorOptions.add} \r\n        props={{\r\n            [redactorOptions.add]: {\r\n            className: styles.addContent,\r\n            size: 30,\r\n            onClick,\r\n            allowOnlyRedactor: true\r\n        }}}\r\n    />\r\n}\r\n\r\nconst parseHomeworkByLesson = (homework: homework[]): { [lesson: string]: homework[] } => {\r\n    const parsedHomework = {} as { [lesson: string]: homework[] } & object;\r\n\r\n    for (let hw of homework) {\r\n        const lesson = hw.lesson;\r\n        if (parsedHomework.hasOwnProperty(lesson)) {\r\n                parsedHomework[lesson].push(hw);\r\n        } else {\r\n            parsedHomework[lesson] = [hw];\r\n        }\r\n    }\r\n\r\n    return parsedHomework;\r\n}\r\n\r\nexport default HomeworkSection","import React, { useState } from 'react'\r\nimport styles from '../Common/ContentSection.module.css'\r\nimport InfoSection from '../../InfoSection/InfoSection';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { content, attachment, WithTypename, change, redactorOptions } from '../../../../../types';\r\nimport Suspender from '../../../../Common/Suspender';\r\nimport Accordion from \"../../../../Common/Accordion\";\r\nimport { GoTriangleRight } from \"react-icons/go\"; \r\nimport ReactDOM from \"react-dom\";\r\nimport ChangeContent from \"../../../../Common/ChangeContent/ChangeContent\";\r\nimport ImgAlbum from \"../../../../Common/OpenableImage/ImgAlbum\";\r\nimport { parseContentByDate, getDateStrFromDayMonthStr } from \"../../../../../utils/functions\";\r\nimport Options from \"../../../../Common/Options\";\r\n \r\nconst changeContentModalRoot = document.getElementById('changeContentModal');\r\n\r\ntype Props = {\r\n    className: string\r\n}\r\ntype changeProps = {\r\n    change: change\r\n    removeChange: (chnageId: string | undefined) => void,\r\n    updateChange: (changeId: string | undefined, updates: Partial<change>) => void\r\n}\r\n\r\nconst GET_CHANGES = gql`\r\n    query GetChanges($className: String!) {\r\n        changes: getChanges(className: $className) {\r\n            text\r\n            createdBy\r\n            to\r\n            attachments {\r\n                url\r\n                value\r\n                _id\r\n            }\r\n            _id\r\n            __typename\r\n        }\r\n    }\r\n`\r\n\r\nconst REMOVE_CHANGE = gql`\r\n    mutation RemoveChange($className: String!, $changeId: String!) {\r\n        removeChange(changeId: $changeId, className: $className)\r\n    }\r\n`\r\n\r\nconst UPDATE_CHANGE = gql`\r\n    mutation UpdateChange($className: String!, $changeId: String!, $updates: ClassChangesInput!) {\r\n        updateChange(className: $className, changeId: $changeId, updates: $updates) {\r\n            _id \r\n            text\r\n            attachments { \r\n                url \r\n                value\r\n                _id\r\n            }\r\n            to\r\n        }\r\n    }\r\n`\r\n\r\nconst ADD_CHANGE = gql`\r\n    mutation addChange($className: String!, $text: String!, $to: String, $attachments: [ClassHomeworkAttachmentsInput]!) {\r\n        addChange(className: $className, text: $text, to: $to, attachments: $attachments) {\r\n            __typename\r\n            text\r\n            _id\r\n            to\r\n            attachments {\r\n                url\r\n                value\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst ChangesSection: React.FC<Props> = ({ className }) => {\r\n    const [changeCreating, setChangeCreating] = useState(false);\r\n    const [initContent, setInitContent] = useState({});\r\n    const changesQuery = useQuery<{ changes: change[] }>(GET_CHANGES, { variables: { className } });\r\n\r\n    const [removeChange] = useMutation<\r\n        WithTypename<{\r\n            removeChange: string\r\n        }>,\r\n        {\r\n            className: string,\r\n            changeId: string,\r\n        }\r\n    >(REMOVE_CHANGE);\r\n    const [updateChange] = useMutation<\r\n        WithTypename<{\r\n            updateChange: WithTypename<Partial<change>>\r\n        }>,\r\n        {\r\n            className: string,\r\n            changeId: string,\r\n            updates: Partial<Omit<change, \"attachments\"> & { attachments: attachment[] }>\r\n        }>(UPDATE_CHANGE);\r\n\r\n    const [addChange] = useMutation<\r\n        WithTypename<{\r\n            addChange: WithTypename<change>\r\n        }>,\r\n        {\r\n            className: string,\r\n            text: string,\r\n            attachments: attachment[]\r\n            to: string\r\n        }\r\n    >(ADD_CHANGE)\r\n\r\n    const remove = (changeId: string | undefined) => {\r\n        if (changeId) {\r\n            removeChange({\r\n                variables: { className, changeId },\r\n                optimisticResponse: {\r\n                    __typename: \"Mutation\",\r\n                    removeChange: changeId\r\n                },\r\n                update: (proxy, res) => {\r\n                    const data = proxy.readQuery<{ changes: change[] }>({ query: GET_CHANGES, variables: { className } });\r\n\r\n                    if (res?.data) {\r\n                        proxy.writeQuery({\r\n                            query: GET_CHANGES,\r\n                            variables: { className },\r\n                            data: {\r\n                                changes: data?.changes.filter(chng => chng._id !== changeId) || []\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const update = (changeId: string | undefined, updates: Partial<WithTypename<change>>) => {\r\n        const {__typename, ...changeWithoutTypename} = updates;\r\n\r\n        if (changeId) {\r\n            updateChange({\r\n                variables: { className, changeId, updates: { ...changeWithoutTypename, attachments: updates.attachments?.map(({ __typename, ...att }) => att) } },\r\n                optimisticResponse: {\r\n                    __typename: \"Mutation\",\r\n                    updateChange: {\r\n                        __typename: \"ClassChange\",\r\n                        _id: changeId,\r\n                        ...changesQuery?.data?.changes.find(hw => hw._id === changeId),\r\n                        ...updates\r\n                    }\r\n                },\r\n                update: (proxy, res) => {\r\n                    const data = proxy.readQuery<{ changes: change[] }>({ query: GET_CHANGES, variables: { className } });\r\n\r\n                    if (res?.data) {\r\n                        proxy.writeQuery({\r\n                            query: GET_CHANGES,\r\n                            variables: { className },\r\n                            data: {\r\n                                homework: data?.changes.map(chng => chng._id === changeId ? res.data?.updateChange : chng) || []\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const add = (changeData: Omit<change, \"_id\">) => {\r\n        console.log(changeData);\r\n        addChange({\r\n            variables: { ...changeData, className, attachments: changeData?.attachments?.map(({ __typename, ...att }) => att) },\r\n            optimisticResponse: {\r\n                __typename: \"Mutation\",\r\n                addChange: {\r\n                    ...changeData,\r\n                    _id: Date.now().toString(),\r\n                    __typename: \"ClassChange\"\r\n                }\r\n            },\r\n            refetchQueries: [{\r\n                query: GET_CHANGES,\r\n                variables: { className }\r\n            }]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <InfoSection\r\n                name='Домашняя работа'\r\n                Header={({ opened, onClick }) =>\r\n                    <div className={`${styles.sectionHeader} ${styles.contentHeader}`} onClick={onClick}>\r\n                        <div className={styles.title}>\r\n                            Изменения в расписании \r\n                            <GoTriangleRight className={opened ? styles.triangle_opened : \"\"} size={15} />\r\n                        </div>\r\n                        <Add onClick={(e) => (e.stopPropagation(), setChangeCreating(true))} />\r\n                    </div>}>\r\n                <Suspender query={changesQuery}>\r\n                    {(data: { changes: WithTypename<change>[] }) => {\r\n                        const [_,parsedChanges] = parseContentByDate(data.changes);\r\n                        return <div className={styles.content}>\r\n                            {Object.keys(parsedChanges).map(changeDate =>\r\n                                <Accordion\r\n                                    key={changeDate}\r\n                                    Head={({ onClick, opened }) => \r\n                                        <div className={styles.sectionHeader} onClick={onClick}>\r\n                                            <div className={styles.title}>\r\n                                                {changeDate}\r\n                                                <GoTriangleRight className={opened ? styles.triangle_opened : \"\"} size={15} />\r\n                                            </div>\r\n                                            <Add onClick={(e) => (\r\n                                                e.stopPropagation(), \r\n                                                setChangeCreating(true),\r\n                                                setInitContent({to: getDateStrFromDayMonthStr(changeDate)})\r\n                                            )} />\r\n                                        </div>\r\n                                    }\r\n                                    Body={() =>\r\n                                        <>\r\n                                            <div className={`${styles.elements} ${styles.offseted}`}>\r\n                                                {parsedChanges[changeDate].map((change, i) => <Change updateChange={update} key={change._id} removeChange={remove} change={change} />)}\r\n                                            </div>\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    }\r\n                    }\r\n                </Suspender>\r\n            </InfoSection>\r\n            {changeContentModalRoot && changeCreating &&\r\n                ReactDOM.createPortal(\r\n                    <CreateChangeModal\r\n                        returnChange={add}\r\n                        close={() => setChangeCreating(false)}\r\n                        initContent={initContent}\r\n                    />,\r\n                    changeContentModalRoot\r\n                )}\r\n        </>\r\n    )\r\n}\r\nconst Change: React.FC<changeProps> = ({ change, removeChange, updateChange }) => {\r\n    const [updating, setUpdating] = useState(false);\r\n\r\n    return (\r\n        <div className={`${styles.container} ${change.attachments.length === 2 ? styles.pair : \"\"}`} onDoubleClick={() => setUpdating(true)}>\r\n            <div key={change._id}\r\n                className={styles.element}>\r\n                {change.attachments.length > 0 &&\r\n                    <> {change.attachments.length <= 2\r\n                        ? <div className={styles.attachments}>\r\n                            <ImgAlbum images={change.attachments} />\r\n                        </div>\r\n                        : <ImgAlbum images={change.attachments} \r\n                            Stab={({ onClick }) => (\r\n                                <div className={styles.stab} onClick={onClick}>\r\n                                    <span>{change.attachments.length}</span>\r\n                                    <span> Photos </span>\r\n                                </div>\r\n                            )}/>\r\n                    } </>\r\n                }\r\n                {change.text &&\r\n                    <p className={styles.text}> {change.text} </p>\r\n                }\r\n                {updating && changeContentModalRoot &&\r\n                    ReactDOM.createPortal(\r\n                        <div className=\"modal\" onMouseDown={() => setUpdating(false)}>\r\n                            <ChangeContent\r\n                                initState={change}\r\n                                confirm={(newContent) => (updateChange(change._id, newContent), setUpdating(false))}\r\n                                reject={() => setUpdating(false)}\r\n                            />\r\n                        </div>,\r\n                        changeContentModalRoot)\r\n                }\r\n            </div>\r\n            <div className={styles.controls}>\r\n                <Options \r\n                    include={[redactorOptions.change, redactorOptions.delete]}\r\n                    props={{ \r\n                        [redactorOptions.change]: {\r\n                            onClick: () => setUpdating(true),\r\n                            className: `${styles.pen}`, \r\n                            size: 15,\r\n                        },\r\n                        [redactorOptions.delete]: {\r\n                            onClick: () => removeChange(change._id),\r\n                            className: `${styles.remove}`, \r\n                            size: 20,\r\n                        }\r\n                    }}\r\n                    withRoleControl\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype CreateChangeModalProps = {\r\n    initContent?: Partial<change>\r\n    returnChange: (hw: Omit<change, \"_id\">) => void\r\n    close: () => void\r\n}\r\nconst CreateChangeModal: React.FC<CreateChangeModalProps> = ({ returnChange, close, initContent = {} }) => {\r\n    if (changeContentModalRoot) {\r\n        return ReactDOM.createPortal(\r\n            <div className={\"modal\"} onMouseDown={close}>\r\n                <ChangeContent\r\n                    initState={initContent}\r\n                    confirm={(content) => (returnChange(content), close)}\r\n                    reject={close}\r\n                />\r\n            </div>\r\n            , changeContentModalRoot)\r\n    }\r\n    return null;\r\n}\r\n\r\nconst Add: React.FC<{onClick: (e: React.MouseEvent<SVGElement, MouseEvent>) => void}> = ({onClick}) => {\r\n    return <Options \r\n        include={redactorOptions.add} \r\n        props={{\r\n            [redactorOptions.add]: {\r\n            className: styles.addContent,\r\n            size: 30,\r\n            onClick,\r\n            allowOnlyRedactor: true\r\n        }}}\r\n    />\r\n}\r\n\r\nexport default ChangesSection","import React, { useState } from 'react'\r\nimport styles from './ClassPage.module.css'\r\nimport StudentsSection from \"./Sections/StudentSection/StudentsSection\";\r\nimport ScheduleSection from \"./Sections/ScheduleSection/ScheduleSection\";\r\nimport HomeworkSection from \"./Sections/HomeworkSection/HomeworkSection\";\r\nimport ChangesSection from \"./Sections/ChangesSection/ChangesSection\";\r\nimport { gql } from 'apollo-boost';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { WithTypename, Class, redactorOptions } from '../../../types';\r\nimport { GET_CLASSES } from \"../Classes/Classes\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport Options from \"../../Common/Options\";\r\nimport Confirm from \"../../Common/Confirm/Confirm\";\r\n\r\nconst REMOVE_CLASS = gql`\r\n    mutation RemoveClass($className: String!) {\r\n        classRemoveOne(className: $className) {\r\n            name\r\n        }\r\n    } \r\n`\r\n\r\nconst ClassPage: React.FC = ({ }) => {\r\n    const [removeClass] = useMutation<WithTypename<{ classRemoveOne: WithTypename<{ name: string }> }>, { className: string }>(REMOVE_CLASS);\r\n    const {className} = useParams<{className: string}>();\r\n    const [waitForConfirm, setWaitForConfirm] = useState(false);\r\n\r\n    const remove = () => {\r\n        removeClass({\r\n            variables: { className },\r\n            optimisticResponse: {\r\n                classRemoveOne: { name: className, __typename: \"Class\" },\r\n                __typename: \"Mutation\"\r\n            },\r\n            update: (proxy, res) => {\r\n                const data = proxy.readQuery<{ classes: Class[] }>({ query: GET_CLASSES });\r\n\r\n                if (data?.classes && res.data) {\r\n                    proxy.writeQuery({\r\n                        query: GET_CLASSES,\r\n                        data: {\r\n                            classes: data?.classes.filter(c => c.name !== res.data?.classRemoveOne.name)\r\n                        }\r\n                    });\r\n\r\n                    return <Redirect to=\"/classes\" />;\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={styles.class}>\r\n                <div className={styles.header}>\r\n                    <div className={styles.className}> {className} </div>\r\n                    <Options \r\n                        include={redactorOptions.delete}\r\n                        props={{\r\n                            onClick: () => setWaitForConfirm(true),\r\n                            size: 30,\r\n                            className: \"remove\",\r\n                            style: {cursor: \"pointer\"},\r\n                            allowOnlyAdmin: true\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <StudentsSection className={className} />\r\n                    <ScheduleSection className={className} />\r\n                    <HomeworkSection className={className} />\r\n                    <ChangesSection className={className} />\r\n                </div>\r\n            </div>\r\n            {waitForConfirm &&\r\n                <Confirm text={`Вы уверены что хотите удалить ${className} класс`} onConfirm={remove} returnRes={() => setWaitForConfirm(false)} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ClassPage","import React from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { UserContext } from \"../App\";\r\nimport { roles } from \"../types\";\r\n\r\nconst withRedirect = (Component: React.FC, allowStudent: boolean = false): JSX.Element => {\r\n    return <UserContext.Consumer>\r\n        {({isAuth, role, className}) =>\r\n            <> {isAuth ? \r\n                <>{role === roles.admin || allowStudent \r\n                    ? <Component /> \r\n                    : <Redirect to={`/classes/${className}`}/>\r\n                }</>\r\n                : <Redirect to=\"/auth\" />\r\n            }\r\n            </>\r\n        }\r\n    </UserContext.Consumer>\r\n}\r\n\r\nexport default withRedirect;","import React, { lazy, Suspense, useEffect, useState } from 'react';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport { Redirect, Route, RouteChildrenProps, RouteComponentProps, Switch } from \"react-router\";\nimport StudentPage from \"./components/Content/StudentPage/StudentPage\";\nimport ClassPage from './components/Content/ClassPage/ClassPage';\nimport { roles, Student, User } from \"./types\";\nimport withRedirect from \"./HOCs/withAuth\";\nimport { gql } from \"apollo-boost\";\nimport { useApolloClient, useQuery } from \"@apollo/react-hooks\";\n\nconst Classes = lazy(() => import(\"./components/Content/Classes/Classes\"));\nconst Students = lazy(() => import(\"./components/Content/Students/Students\"));\nconst Auth = lazy(() => import(\"./components/Content/Auth/Auth\"));\n\nexport const UserContext = React.createContext<\n    {isAuth: boolean} & Partial<User>\n>({\n    isAuth: false,\n    role: roles.student,\n    className: \"Нету\",\n    photo: \"\", \n    photo_rec: \"\",\n    last_name: \"\",\n    first_name: \"\",\n    uid: NaN\n});\n\nconst GET_STUDENT = gql`\n    query GET_STUDENT($filter: FilterFindOneStudentInput!) {\n        student: studentOne(filter: $filter) {\n            role\n            className\n        } \n    }\n`\n\nfunction App() {\n    const ApolloClient = useApolloClient();\n    const [user, setUser] = useState<User | null>(\n        process.env.NODE_ENV === \"production\"\n            ? null\n            : JSON.parse(process.env.REACT_APP_USER || \"null\") as User || \n            {\n                role: (process.env.REACT_APP_ROLE || \"ADMIN\") as roles,\n                className: process.env.REACT_APP_CLASS_NAME || \"10Б\",\n                first_name: process.env.REACT_APP_FIRST_NAME || \"Дамир\",\n                last_name: process.env.REACT_APP_LAST_NAME || \"Ахметзянов\",\n                photo: process.env.REACT_APP_PHOTO || \"/images/camera_200.png?ava=1\",\n                photo_rec: process.env.REACT_APP_PHOTO_REC || \"/images/camera_50.png?ava=1\",\n                uid: process.env.REACT_APP_UID || 227667805,\n            }\n    );\n    \n    const onUser = async (user: Omit<User, \"role\">) => {\n        const { data: { student: { role, className } } } = await ApolloClient.query<\n            {student: {role: roles, className: string}}, \n            {filter: Partial<Student>}\n        >({query: GET_STUDENT, variables: { filter: {vkId: user.uid} }});\n        \n        const userWithRole = {...user, role, className}\n\n        setUser(userWithRole);\n        localStorage.setItem(\"user\", JSON.stringify(userWithRole));\n    }\n\n    useEffect(() => {\n        if (!user) {\n            const userItem = localStorage.getItem(\"user\");\n\n            if (userItem) { \n                const parsedUser = JSON.parse(userItem);\n                if (typeof parsedUser === \"object\") {\n                    setUser(parsedUser);\n                } else {\n                    localStorage.removeItem(\"user\");\n                }\n            }\n        }\n    }, [])\n\n    return (\n        <UserContext.Provider value={{isAuth: user !== null, ...user}}>\n            <div className={`wrapper`}>\n                <div className={`app`}>\n                    {user === null \n                        ? <Suspense fallback={<div>loading...</div>}>\n                            <Auth setUser={onUser}/>\n                        </Suspense>\n                        : <>\n                            <Sidebar setUser={setUser}/>\n                            <div className=\"content\">\n                                <Suspense fallback={<div> Loading... </div>}>\n                                <Switch>\n                                    <Route exact path=\"/classes\" component={() => withRedirect(Classes)} />\n                                    <Route \n                                    path=\"/classes/:className\" \n                                    render={(props) => props.match.params.className === user.className \n                                        ? <ClassPage />\n                                        : withRedirect(ClassPage)\n                                    } />\n                                    <Route exact path=\"/students\" component={() => withRedirect(Students)} />\n                                    <Route path=\"/students/:vkId\" component={() => withRedirect(StudentPage, true)} />\n                                    <Route path=\"*\" render={() => <Redirect to={\"/classes\"} />} />\n                                </Switch>\n                                </Suspense>\n                            </div>\n                        </> \n                    }\n                </div>\n            </div>\n        </UserContext.Provider>\n    );\n}\n\nexport default App;\n"],"sourceRoot":""}